{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? _Reflect$construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport { Grid, Button, Header, Icon, Menu, Sidebar, Container, Table, Form, Message, Modal } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../routes';\nimport { Helmet } from 'react-helmet';\nimport { getSharedElectionData, addCandidateToSharedData, subscribeToUpdates } from '../../components/sharedElectionData';\nvar CandidateList = /*#__PURE__*/function (_Component) {\n  function CandidateList() {\n    var _this;\n    _classCallCheck(this, CandidateList);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, CandidateList, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      election_address: Cookies.get('address'),\n      election_name: '',\n      election_description: '',\n      candidates: [],\n      loading: false,\n      error: null,\n      modalOpen: false,\n      newCandidate: {\n        name: '',\n        position: '',\n        email: '',\n        bio: ''\n      },\n      formErrors: {}\n    });\n    _defineProperty(_this, \"handleDataUpdate\", function (updatedData) {\n      console.log('CandidateList.js received data update:', updatedData);\n      _this.updateUIWithElectionData(updatedData);\n    });\n    _defineProperty(_this, \"initializeElection\", function () {\n      try {\n        // Use the shared election data\n        var electionData = getSharedElectionData();\n        _this.updateUIWithElectionData(electionData);\n      } catch (err) {\n        console.error(\"Error in initializeElection:\", err.message);\n        _this.setState({\n          error: err.message,\n          loading: false\n        });\n      }\n    });\n    _defineProperty(_this, \"updateUIWithElectionData\", function (electionData) {\n      _this.setState({\n        electionData: electionData,\n        election_name: electionData.name,\n        election_description: electionData.description,\n        candidates: electionData.candidateData,\n        loading: false,\n        error: null\n      });\n    });\n    _defineProperty(_this, \"SidebarExampleVisible\", function () {\n      return /*#__PURE__*/React.createElement(Sidebar.Pushable, null, /*#__PURE__*/React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"MENU\"), /*#__PURE__*/React.createElement(\"hr\", null)), /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Button, {\n        onClick: _this.signOut,\n        style: {\n          backgroundColor: 'white'\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\"))));\n    });\n    _defineProperty(_this, \"signOut\", function () {\n      Cookies.remove('address');\n      Cookies.remove('company_email');\n      Cookies.remove('company_id');\n      alert(\"Logging out.\");\n      Router.pushRoute('/homepage');\n    });\n    _defineProperty(_this, \"getElectionDetails\", function () {\n      var _this$state = _this.state,\n        election_name = _this$state.election_name,\n        election_description = _this$state.election_description,\n        electionData = _this$state.electionData;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '2%',\n          marginTop: '2%'\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"address card\"\n      }), /*#__PURE__*/React.createElement(Header.Content, null, election_name, /*#__PURE__*/React.createElement(Header.Subheader, null, election_description), electionData && /*#__PURE__*/React.createElement(Header.Subheader, null, \"Total Candidates: \", electionData.candidates, \" | Total Votes: \", electionData.totalVotes))));\n    });\n    _defineProperty(_this, \"handleInputChange\", function (e, _ref) {\n      var name = _ref.name,\n        value = _ref.value;\n      _this.setState(function (prevState) {\n        return {\n          newCandidate: _objectSpread({}, prevState.newCandidate, _defineProperty({}, name, value)),\n          formErrors: _objectSpread({}, prevState.formErrors, _defineProperty({}, name, ''))\n        };\n      });\n    });\n    _defineProperty(_this, \"validateForm\", function () {\n      var newCandidate = _this.state.newCandidate;\n      var errors = {};\n      if (!newCandidate.name.trim()) errors.name = 'Name is required';\n      if (!newCandidate.position.trim()) errors.position = 'Position is required';\n      if (!newCandidate.email.trim()) errors.email = 'Email is required';\n      if (!newCandidate.bio.trim()) errors.bio = 'Bio is required';\n      _this.setState({\n        formErrors: errors\n      });\n      return _Object$keys(errors).length === 0;\n    });\n    _defineProperty(_this, \"handleAddCandidate\", function () {\n      if (!_this.validateForm()) {\n        return;\n      }\n      try {\n        var newCandidate = _this.state.newCandidate;\n\n        // Add candidate to shared data\n        addCandidateToSharedData(newCandidate);\n\n        // Reset form and close modal\n        _this.setState({\n          modalOpen: false,\n          newCandidate: {\n            name: '',\n            position: '',\n            email: '',\n            bio: ''\n          },\n          formErrors: {}\n        });\n        alert('Candidate added successfully!');\n      } catch (err) {\n        console.error(\"Error adding candidate:\", err.message);\n        _this.setState({\n          error: err.message,\n          loading: false\n        });\n      }\n    });\n    _defineProperty(_this, \"renderTable\", function () {\n      var _this$state2 = _this.state,\n        candidates = _this$state2.candidates,\n        loading = _this$state2.loading,\n        error = _this$state2.error;\n      if (error) {\n        return /*#__PURE__*/React.createElement(Message, {\n          negative: true\n        }, /*#__PURE__*/React.createElement(Message.Header, null, \"Error\"), /*#__PURE__*/React.createElement(\"p\", null, error), /*#__PURE__*/React.createElement(Button, {\n          primary: true,\n          onClick: _this.initializeElection\n        }, \"Retry\"));\n      }\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Message, {\n          info: true\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"circle notched\",\n          loading: true\n        }), \"Loading candidates...\");\n      }\n      if (candidates.length === 0) {\n        return /*#__PURE__*/React.createElement(Message, {\n          warning: true\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"warning circle\"\n        }), \"No candidates available for this election.\");\n      }\n      return /*#__PURE__*/React.createElement(Table, {\n        celled: true\n      }, /*#__PURE__*/React.createElement(Table.Header, null, /*#__PURE__*/React.createElement(Table.Row, null, /*#__PURE__*/React.createElement(Table.HeaderCell, null, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, null, \"Position\"), /*#__PURE__*/React.createElement(Table.HeaderCell, null, \"Email\"), /*#__PURE__*/React.createElement(Table.HeaderCell, null, \"Bio\"), /*#__PURE__*/React.createElement(Table.HeaderCell, null, \"Votes\"))), /*#__PURE__*/React.createElement(Table.Body, null, candidates.map(function (candidate, index) {\n        return /*#__PURE__*/React.createElement(Table.Row, {\n          key: index\n        }, /*#__PURE__*/React.createElement(Table.Cell, null, candidate.name), /*#__PURE__*/React.createElement(Table.Cell, null, candidate.position), /*#__PURE__*/React.createElement(Table.Cell, null, candidate.email), /*#__PURE__*/React.createElement(Table.Cell, null, candidate.bio), /*#__PURE__*/React.createElement(Table.Cell, null, candidate.votes));\n      })));\n    });\n    return _this;\n  }\n  _inherits(CandidateList, _Component);\n  return _createClass(CandidateList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializeElection();\n      // Subscribe to data updates\n      this.unsubscribe = subscribeToUpdates(this.handleDataUpdate);\n      console.log('CandidateList.js subscribed to updates');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Clean up subscription\n      if (this.unsubscribe) {\n        this.unsubscribe();\n        console.log('CandidateList.js unsubscribed from updates');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state3 = this.state,\n        modalOpen = _this$state3.modalOpen,\n        newCandidate = _this$state3.newCandidate,\n        formErrors = _this$state3.formErrors;\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Helmet, null, /*#__PURE__*/React.createElement(\"title\", null, \"Candidates\"), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"shortcut icon\",\n        type: \"image/x-icon\",\n        href: \"../../static/logo-Block.png\"\n      })), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 14\n      }, /*#__PURE__*/React.createElement(Layout, null, this.getElectionDetails(), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: '20px'\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: function onClick() {\n          return _this2.setState({\n            modalOpen: true\n          });\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"add\"\n      }), \"Add New Candidate\")), this.renderTable()), /*#__PURE__*/React.createElement(Modal, {\n        open: modalOpen,\n        onClose: function onClose() {\n          return _this2.setState({\n            modalOpen: false\n          });\n        },\n        size: \"small\"\n      }, /*#__PURE__*/React.createElement(Header, {\n        icon: \"add user\",\n        content: \"Add New Candidate\"\n      }), /*#__PURE__*/React.createElement(Modal.Content, null, /*#__PURE__*/React.createElement(Form, {\n        error: _Object$keys(formErrors).length > 0\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        label: \"Name\",\n        placeholder: \"Candidate Name\",\n        name: \"name\",\n        value: newCandidate.name,\n        onChange: this.handleInputChange,\n        error: formErrors.name ? {\n          content: formErrors.name,\n          pointing: 'below'\n        } : null\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        label: \"Position\",\n        placeholder: \"Candidate Position\",\n        name: \"position\",\n        value: newCandidate.position,\n        onChange: this.handleInputChange,\n        error: formErrors.position ? {\n          content: formErrors.position,\n          pointing: 'below'\n        } : null\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        label: \"Email\",\n        placeholder: \"Candidate Email\",\n        name: \"email\",\n        value: newCandidate.email,\n        onChange: this.handleInputChange,\n        error: formErrors.email ? {\n          content: formErrors.email,\n          pointing: 'below'\n        } : null\n      }), /*#__PURE__*/React.createElement(Form.TextArea, {\n        label: \"Bio\",\n        placeholder: \"Candidate Bio\",\n        name: \"bio\",\n        value: newCandidate.bio,\n        onChange: this.handleInputChange,\n        error: formErrors.bio ? {\n          content: formErrors.bio,\n          pointing: 'below'\n        } : null\n      }))), /*#__PURE__*/React.createElement(Modal.Actions, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            modalOpen: false\n          });\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: this.handleAddCandidate\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"add\"\n      }), \"Add Candidate\"))))))));\n    }\n  }]);\n}(Component);\nexport default CandidateList;","map":{"version":3,"names":["React","Component","Grid","Button","Header","Icon","Menu","Sidebar","Container","Table","Form","Message","Modal","Layout","Cookies","Router","Helmet","getSharedElectionData","addCandidateToSharedData","subscribeToUpdates","CandidateList","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","election_address","get","election_name","election_description","candidates","loading","error","modalOpen","newCandidate","name","position","email","bio","formErrors","updatedData","console","log","updateUIWithElectionData","electionData","err","message","setState","description","candidateData","createElement","Pushable","as","animation","icon","inverted","vertical","visible","width","style","backgroundColor","borderWidth","Item","color","onClick","signOut","remove","alert","pushRoute","_this$state","state","textAlign","marginBottom","marginTop","Content","Subheader","totalVotes","e","_ref","value","prevState","_objectSpread","errors","trim","_Object$keys","validateForm","_this$state2","negative","primary","initializeElection","info","warning","celled","Row","HeaderCell","Body","map","candidate","index","key","Cell","votes","_inherits","_createClass","componentDidMount","unsubscribe","handleDataUpdate","componentWillUnmount","render","_this2","_this$state3","rel","type","href","Column","SidebarExampleVisible","getElectionDetails","renderTable","open","onClose","size","content","Input","label","placeholder","onChange","handleInputChange","pointing","TextArea","Actions","handleAddCandidate"],"sources":["C:/Users/Sathyajothi/Desktop/BlockChainVoting/pages/company_login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Button, Header, Icon, Menu, Sidebar, Container, Table, Form, Message, Modal } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Cookies from 'js-cookie';\r\nimport { Router } from '../../routes';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  getSharedElectionData,\r\n  addCandidateToSharedData,\r\n  subscribeToUpdates\r\n} from '../../components/sharedElectionData';\r\n\r\nclass CandidateList extends Component {\r\n  state = {\r\n    election_address: Cookies.get('address'),\r\n    election_name: '',\r\n    election_description: '',\r\n    candidates: [],\r\n    loading: false,\r\n    error: null,\r\n    modalOpen: false,\r\n    newCandidate: {\r\n      name: '',\r\n      position: '',\r\n      email: '',\r\n      bio: ''\r\n    },\r\n    formErrors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initializeElection();\r\n    // Subscribe to data updates\r\n    this.unsubscribe = subscribeToUpdates(this.handleDataUpdate);\r\n    console.log('CandidateList.js subscribed to updates');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Clean up subscription\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n      console.log('CandidateList.js unsubscribed from updates');\r\n    }\r\n  }\r\n\r\n  handleDataUpdate = (updatedData) => {\r\n    console.log('CandidateList.js received data update:', updatedData);\r\n    this.updateUIWithElectionData(updatedData);\r\n  }\r\n\r\n  initializeElection = () => {\r\n    try {\r\n      // Use the shared election data\r\n      const electionData = getSharedElectionData();\r\n\r\n      this.updateUIWithElectionData(electionData);\r\n    } catch (err) {\r\n      console.error(\"Error in initializeElection:\", err.message);\r\n      this.setState({\r\n        error: err.message,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  updateUIWithElectionData = (electionData) => {\r\n    this.setState({\r\n      electionData,\r\n      election_name: electionData.name,\r\n      election_description: electionData.description,\r\n      candidates: electionData.candidateData,\r\n      loading: false,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  SidebarExampleVisible = () => (\r\n    <Sidebar.Pushable>\r\n      <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <h2>MENU</h2><hr />\r\n        </Menu.Item>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <Icon name='dashboard' />\r\n          Dashboard\r\n        </Menu.Item>\r\n        <hr />\r\n        <Button onClick={this.signOut} style={{ backgroundColor: 'white' }}>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='sign out' />\r\n            Sign Out\r\n          </Menu.Item>\r\n        </Button>\r\n      </Sidebar>\r\n    </Sidebar.Pushable>\r\n  )\r\n\r\n  signOut = () => {\r\n    Cookies.remove('address');\r\n    Cookies.remove('company_email');\r\n    Cookies.remove('company_id');\r\n    alert(\"Logging out.\");\r\n    Router.pushRoute('/homepage');\r\n  }\r\n\r\n  getElectionDetails = () => {\r\n    const { election_name, election_description, electionData } = this.state;\r\n\r\n    return (\r\n      <div style={{ textAlign: 'center', marginBottom: '2%', marginTop: '2%' }}>\r\n        <Header as=\"h2\">\r\n          <Icon name=\"address card\" />\r\n          <Header.Content>\r\n            {election_name}\r\n            <Header.Subheader>{election_description}</Header.Subheader>\r\n            {electionData && (\r\n              <Header.Subheader>\r\n                Total Candidates: {electionData.candidates} | Total Votes: {electionData.totalVotes}\r\n              </Header.Subheader>\r\n            )}\r\n          </Header.Content>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleInputChange = (e, { name, value }) => {\r\n    this.setState(prevState => ({\r\n      newCandidate: {\r\n        ...prevState.newCandidate,\r\n        [name]: value\r\n      },\r\n      formErrors: {\r\n        ...prevState.formErrors,\r\n        [name]: ''\r\n      }\r\n    }));\r\n  }\r\n\r\n  validateForm = () => {\r\n    const { newCandidate } = this.state;\r\n    const errors = {};\r\n\r\n    if (!newCandidate.name.trim()) errors.name = 'Name is required';\r\n    if (!newCandidate.position.trim()) errors.position = 'Position is required';\r\n    if (!newCandidate.email.trim()) errors.email = 'Email is required';\r\n    if (!newCandidate.bio.trim()) errors.bio = 'Bio is required';\r\n\r\n    this.setState({ formErrors: errors });\r\n    return Object.keys(errors).length === 0;\r\n  }\r\n\r\n  handleAddCandidate = () => {\r\n    if (!this.validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { newCandidate } = this.state;\r\n\r\n      // Add candidate to shared data\r\n      addCandidateToSharedData(newCandidate);\r\n\r\n      // Reset form and close modal\r\n      this.setState({\r\n        modalOpen: false,\r\n        newCandidate: {\r\n          name: '',\r\n          position: '',\r\n          email: '',\r\n          bio: ''\r\n        },\r\n        formErrors: {}\r\n      });\r\n\r\n      alert('Candidate added successfully!');\r\n    } catch (err) {\r\n      console.error(\"Error adding candidate:\", err.message);\r\n      this.setState({\r\n        error: err.message,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  renderTable = () => {\r\n    const { candidates, loading, error } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <Message negative>\r\n          <Message.Header>Error</Message.Header>\r\n          <p>{error}</p>\r\n          <Button primary onClick={this.initializeElection}>Retry</Button>\r\n        </Message>\r\n      );\r\n    }\r\n\r\n    if (loading) {\r\n      return (\r\n        <Message info>\r\n          <Icon name=\"circle notched\" loading />\r\n          Loading candidates...\r\n        </Message>\r\n      );\r\n    }\r\n\r\n    if (candidates.length === 0) {\r\n      return (\r\n        <Message warning>\r\n          <Icon name=\"warning circle\" />\r\n          No candidates available for this election.\r\n        </Message>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Position</Table.HeaderCell>\r\n            <Table.HeaderCell>Email</Table.HeaderCell>\r\n            <Table.HeaderCell>Bio</Table.HeaderCell>\r\n            <Table.HeaderCell>Votes</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {candidates.map((candidate, index) => (\r\n            <Table.Row key={index}>\r\n              <Table.Cell>{candidate.name}</Table.Cell>\r\n              <Table.Cell>{candidate.position}</Table.Cell>\r\n              <Table.Cell>{candidate.email}</Table.Cell>\r\n              <Table.Cell>{candidate.bio}</Table.Cell>\r\n              <Table.Cell>{candidate.votes}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { modalOpen, newCandidate, formErrors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Candidates</title>\r\n          <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../../static/logo-Block.png\" />\r\n        </Helmet>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {this.SidebarExampleVisible()}\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              <Layout>\r\n                {this.getElectionDetails()}\r\n                <Container>\r\n                  <div style={{ marginBottom: '20px' }}>\r\n                    <Button\r\n                      primary\r\n                      onClick={() => this.setState({ modalOpen: true })}\r\n                    >\r\n                      <Icon name='add' />\r\n                      Add New Candidate\r\n                    </Button>\r\n                  </div>\r\n                  {this.renderTable()}\r\n                </Container>\r\n\r\n                {/* Add Candidate Modal */}\r\n                <Modal\r\n                  open={modalOpen}\r\n                  onClose={() => this.setState({ modalOpen: false })}\r\n                  size='small'\r\n                >\r\n                  <Header icon='add user' content='Add New Candidate' />\r\n                  <Modal.Content>\r\n                    <Form error={Object.keys(formErrors).length > 0}>\r\n                      <Form.Input\r\n                        label='Name'\r\n                        placeholder='Candidate Name'\r\n                        name='name'\r\n                        value={newCandidate.name}\r\n                        onChange={this.handleInputChange}\r\n                        error={formErrors.name ? { content: formErrors.name, pointing: 'below' } : null}\r\n                      />\r\n                      <Form.Input\r\n                        label='Position'\r\n                        placeholder='Candidate Position'\r\n                        name='position'\r\n                        value={newCandidate.position}\r\n                        onChange={this.handleInputChange}\r\n                        error={formErrors.position ? { content: formErrors.position, pointing: 'below' } : null}\r\n                      />\r\n                      <Form.Input\r\n                        label='Email'\r\n                        placeholder='Candidate Email'\r\n                        name='email'\r\n                        value={newCandidate.email}\r\n                        onChange={this.handleInputChange}\r\n                        error={formErrors.email ? { content: formErrors.email, pointing: 'below' } : null}\r\n                      />\r\n                      <Form.TextArea\r\n                        label='Bio'\r\n                        placeholder='Candidate Bio'\r\n                        name='bio'\r\n                        value={newCandidate.bio}\r\n                        onChange={this.handleInputChange}\r\n                        error={formErrors.bio ? { content: formErrors.bio, pointing: 'below' } : null}\r\n                      />\r\n                    </Form>\r\n                  </Modal.Content>\r\n                  <Modal.Actions>\r\n                    <Button onClick={() => this.setState({ modalOpen: false })}>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button primary onClick={this.handleAddCandidate}>\r\n                      <Icon name='add' />\r\n                      Add Candidate\r\n                    </Button>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n              </Layout>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CandidateList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}