{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/set-prototype-of\");\nvar _Object$getPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/get-prototype-of\");\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\nvar _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/slicedToArray\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\nvar _assign = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/assign\"));\nvar _set = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/set\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/createClass\"));\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof _Symbol ? _Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = _Object$create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = _Object$getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(c); function f(e) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = _Object$create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = _Object$defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar url_1 = require(\"url\");\nvar mitt_1 = __importDefault(require(\"../mitt\"));\nvar utils_1 = require(\"../utils\");\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}\nvar Router = /*#__PURE__*/function () {\n  function Router(pathname, query, as, _ref) {\n    var _this = this;\n    var initialProps = _ref.initialProps,\n      pageLoader = _ref.pageLoader,\n      App = _ref.App,\n      Component = _ref.Component,\n      err = _ref.err;\n    (0, _classCallCheck2.default)(this, Router);\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname = _this.pathname,\n          _query = _this.query;\n        _this.changeState('replaceState', utils_1.formatWithValidation({\n          pathname: _pathname,\n          query: _query\n        }), utils_1.getURL());\n        return;\n      }\n      // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n      if (e.state.options && e.state.options.fromExternal) {\n        return;\n      }\n      // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n      if (_this._bps && !_this._bps(e.state)) {\n        return;\n      }\n      var _e$state = e.state,\n        url = _e$state.url,\n        as = _e$state.as,\n        options = _e$state.options;\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n      _this.replace(url, as, options);\n    };\n    // represents the current component key\n    this.route = toRoute(pathname);\n    // set up the component cache (by route keys)\n    this.components = {};\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err\n      };\n    }\n    this.components['/_app'] = {\n      Component: App\n    };\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    // @ts-ignore backwards compatibility\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = pathname;\n    this.query = query;\n    this.asPath = as;\n    this.subscriptions = new _set.default();\n    this.componentLoadCancel = null;\n    if (typeof window !== 'undefined') {\n      // in order for `e.state` to work on the `onpopstate` event\n      // we have to register the initial route upon initialization\n      this.changeState('replaceState', utils_1.formatWithValidation({\n        pathname: pathname,\n        query: query\n      }), as);\n      window.addEventListener('popstate', this.onPopState);\n      window.addEventListener('unload', function () {\n        // Workaround for popstate firing on initial page load when\n        // navigating back from an external site\n        if (history.state) {\n          var _history$state = history.state,\n            url = _history$state.url,\n            _as2 = _history$state.as,\n            options = _history$state.options;\n          _this.changeState('replaceState', url, _as2, (0, _assign.default)({}, options, {\n            fromExternal: true\n          }));\n        }\n      });\n    }\n  }\n  return (0, _createClass2.default)(Router, [{\n    key: \"update\",\n    value: function update(route, Component) {\n      var data = this.components[route];\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n      var newData = (0, _assign.default)({}, data, {\n        Component: Component\n      });\n      this.components[route] = newData;\n      // pages/_app.js updated\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(route) {\n      var _this2 = this;\n      return new _promise.default(function (resolve, reject) {\n        delete _this2.components[route];\n        _this2.pageLoader.clearCache(route);\n        if (route !== _this2.route) {\n          return resolve();\n        }\n        var pathname = _this2.pathname,\n          query = _this2.query;\n        var url = window.location.href;\n        // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.\n        var as = window.location.pathname + window.location.search + window.location.hash;\n        Router.events.emit('routeChangeStart', url);\n        _this2.getRouteInfo(route, pathname, query, as).then(function (routeInfo) {\n          var error = routeInfo.error;\n          if (error && error.cancelled) {\n            return resolve();\n          }\n          _this2.notify(routeInfo);\n          if (error) {\n            Router.events.emit('routeChangeError', error, url);\n            return reject(error);\n          }\n          Router.events.emit('routeChangeComplete', url);\n        });\n      });\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function change(method, _url, _as, options) {\n      var _this3 = this;\n      return new _promise.default(function (resolve, reject) {\n        // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n        var url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n        var as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n        // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n          // @ts-ignore this is temporarily global (attached to window)\n          if (__NEXT_DATA__.nextExport) {\n            as = Router._rewriteUrlForNextExport(as);\n          }\n        }\n        _this3.abortComponentLoad(as);\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        if (_this3.onlyAHashChange(as)) {\n          Router.events.emit('hashChangeStart', as);\n          _this3.changeState(method, url, as);\n          _this3.scrollToHash(as);\n          Router.events.emit('hashChangeComplete', as);\n          return true;\n        }\n        var _url_1$parse = url_1.parse(url, true),\n          pathname = _url_1$parse.pathname,\n          query = _url_1$parse.query;\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!_this3.urlIsNew(as)) {\n          method = 'replaceState';\n        }\n        // @ts-ignore pathname is always a string\n        var route = toRoute(pathname);\n        var _options$shallow = options.shallow,\n          shallow = _options$shallow === void 0 ? false : _options$shallow;\n        Router.events.emit('routeChangeStart', as);\n        // If shallow is true and the route exists in the router cache we reuse the previous result\n        // @ts-ignore pathname is always a string\n        _this3.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {\n          var error = routeInfo.error;\n          if (error && error.cancelled) {\n            return resolve(false);\n          }\n          Router.events.emit('beforeHistoryChange', as);\n          _this3.changeState(method, url, as, options);\n          var hash = window.location.hash.substring(1);\n          // @ts-ignore pathname is always defined\n          _this3.set(route, pathname, query, as, (0, _assign.default)({}, routeInfo, {\n            hash: hash\n          }));\n          if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n          }\n          Router.events.emit('routeChangeComplete', as);\n          return resolve(true);\n        }, reject);\n      });\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n        // @ts-ignore method should always exist on history\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n      if (method !== 'pushState' || utils_1.getURL() !== as) {\n        // @ts-ignore method should always exist on history\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        }, null, as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function getRouteInfo(route, pathname, query, as) {\n      var _this4 = this;\n      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var cachedRouteInfo = this.components[route];\n      // If there is a shallow route transition possible\n      // If the route is already rendered on the screen.\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return _promise.default.resolve(cachedRouteInfo);\n      }\n      return new _promise.default(function (resolve, reject) {\n        if (cachedRouteInfo) {\n          return resolve(cachedRouteInfo);\n        }\n        _this4.fetchComponent(route).then(function (Component) {\n          return resolve({\n            Component: Component\n          });\n        }, reject);\n      }).then(function (routeInfo) {\n        var Component = routeInfo.Component;\n        if (process.env.NODE_ENV !== 'production') {\n          var _require = require('react-is'),\n            isValidElementType = _require.isValidElementType;\n          if (!isValidElementType(Component)) {\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n          }\n        }\n        return new _promise.default(function (resolve, reject) {\n          var ctx = {\n            pathname: pathname,\n            query: query,\n            asPath: as\n          };\n          _this4.getInitialProps(Component, ctx).then(function (props) {\n            routeInfo.props = props;\n            _this4.components[route] = routeInfo;\n            resolve(routeInfo);\n          }, reject);\n        });\n      }).catch(function (err) {\n        return new _promise.default(function (resolve) {\n          if (err.code === 'PAGE_LOAD_ERROR') {\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as;\n            // Changing the URL doesn't block executing the current code path.\n            // So, we need to mark it as a cancelled error and stop the routing logic.\n            err.cancelled = true;\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          if (err.cancelled) {\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          resolve(_this4.fetchComponent('/_error').then(function (Component) {\n            var routeInfo = {\n              Component: Component,\n              err: err\n            };\n            var ctx = {\n              err: err,\n              pathname: pathname,\n              query: query\n            };\n            return new _promise.default(function (resolve) {\n              _this4.getInitialProps(Component, ctx).then(function (props) {\n                routeInfo.props = props;\n                routeInfo.error = err;\n                resolve(routeInfo);\n              }, function (gipErr) {\n                console.error('Error in error page `getInitialProps`: ', gipErr);\n                routeInfo.error = err;\n                routeInfo.props = {};\n                resolve(routeInfo);\n              });\n            });\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    }\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n      var _this$asPath$split = this.asPath.split('#'),\n        _this$asPath$split2 = (0, _slicedToArray2.default)(_this$asPath$split, 2),\n        oldUrlNoHash = _this$asPath$split2[0],\n        oldHash = _this$asPath$split2[1];\n      var _as$split = as.split('#'),\n        _as$split2 = (0, _slicedToArray2.default)(_as$split, 2),\n        newUrlNoHash = _as$split2[0],\n        newHash = _as$split2[1];\n      // Makes sure we scroll to the provided hash if the url/hash are the same\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      }\n      // If the urls are change, there's more than a hash change\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      }\n      // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n        _as$split4 = (0, _slicedToArray2.default)(_as$split3, 2),\n        hash = _as$split4[1];\n      // Scroll to top if the hash is just `#` with no value\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      }\n      // First we check if the element by id is found\n      var idEl = document.getElementById(hash);\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      }\n      // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n      var nameEl = document.getElementsByName(hash)[0];\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(url) {\n      var _this5 = this;\n      return new _promise.default(function (resolve, reject) {\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (process.env.NODE_ENV !== 'production' || process.env.__NEXT_EXPERIMENTAL_DEBUG) return;\n        var _url_1$parse2 = url_1.parse(url),\n          pathname = _url_1$parse2.pathname;\n        // @ts-ignore pathname is always defined\n        var route = toRoute(pathname);\n        _this5.pageLoader.prefetch(route).then(resolve, reject);\n      });\n    }\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator().m(function _callee(route) {\n        var cancelled, cancel, Component, error;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              cancelled = false;\n              cancel = this.componentLoadCancel = function () {\n                cancelled = true;\n              };\n              _context.n = 1;\n              return this.pageLoader.loadPage(route);\n            case 1:\n              Component = _context.v;\n              if (!cancelled) {\n                _context.n = 2;\n                break;\n              }\n              error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n              error.cancelled = true;\n              throw error;\n            case 2:\n              if (cancel === this.componentLoadCancel) {\n                this.componentLoadCancel = null;\n              }\n              return _context.a(2, Component);\n          }\n        }, _callee, this);\n      }));\n      function fetchComponent(_x) {\n        return _fetchComponent.apply(this, arguments);\n      }\n      return fetchComponent;\n    }()\n  }, {\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator().m(function _callee2(Component, ctx) {\n        var cancelled, cancel, App, props, err;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              cancelled = false;\n              cancel = function cancel() {\n                cancelled = true;\n              };\n              this.componentLoadCancel = cancel;\n              App = this.components['/_app'].Component;\n              _context2.n = 1;\n              return utils_1.loadGetInitialProps(App, {\n                Component: Component,\n                router: this,\n                ctx: ctx\n              });\n            case 1:\n              props = _context2.v;\n              if (cancel === this.componentLoadCancel) {\n                this.componentLoadCancel = null;\n              }\n              if (!cancelled) {\n                _context2.n = 2;\n                break;\n              }\n              err = new Error('Loading initial props cancelled');\n              err.cancelled = true;\n              throw err;\n            case 2:\n              return _context2.a(2, props);\n          }\n        }, _callee2, this);\n      }));\n      function getInitialProps(_x2, _x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n      return getInitialProps;\n    }()\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.componentLoadCancel) {\n        Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);\n        this.componentLoadCancel();\n        this.componentLoadCancel = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      var App = this.components['/_app'].Component;\n      this.subscriptions.forEach(function (fn) {\n        return fn((0, _assign.default)({}, data, {\n          App: App\n        }));\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(fn) {\n      var _this6 = this;\n      this.subscriptions.add(fn);\n      return function () {\n        return _this6.subscriptions.delete(fn);\n      };\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      var _url$split = url.split('#'),\n        _url$split2 = (0, _slicedToArray2.default)(_url$split, 2),\n        pathname = _url$split2[0],\n        hash = _url$split2[1];\n      // tslint:disable-next-line\n      var _pathname$split = pathname.split('?'),\n        _pathname$split2 = (0, _slicedToArray2.default)(_pathname$split, 2),\n        path = _pathname$split2[0],\n        qs = _pathname$split2[1];\n      path = path.replace(/\\/$/, '');\n      // Append a trailing slash if this path does not have an extension\n      if (!/\\.[^/]+\\/?$/.test(path)) path += \"/\";\n      if (qs) path += '?' + qs;\n      if (hash) path += '#' + hash;\n      return path;\n    }\n  }]);\n}();\nRouter.events = mitt_1.default();\nexports.default = Router;","map":{"version":3,"names":["_interopRequireDefault","require","_Object$setPrototypeOf","_Object$getPrototypeOf","_Object$create","_Symbol","_Object$defineProperty","_asyncToGenerator2","_slicedToArray2","_promise","_assign","_set","_classCallCheck2","_createClass2","_regenerator","e","t","r","n","iterator","o","toStringTag","i","c","prototype","Generator","u","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","__proto__","displayName","w","m","_regeneratorDefine","enumerable","configurable","writable","_invoke","__importDefault","mod","__esModule","Object","defineProperty","exports","url_1","mitt_1","utils_1","toRoute","path","replace","Router","pathname","query","as","_ref","_this","initialProps","pageLoader","App","Component","err","default","onPopState","state","changeState","formatWithValidation","getURL","options","fromExternal","_bps","_e$state","url","process","env","NODE_ENV","console","warn","route","components","props","events","asPath","subscriptions","componentLoadCancel","window","addEventListener","history","_history$state","key","update","data","Error","concat","newData","notify","reload","_this2","resolve","reject","clearCache","location","href","search","hash","emit","getRouteInfo","then","routeInfo","error","cancelled","back","push","arguments","undefined","change","method","_url","_as","_this3","__NEXT_EXPORT_TRAILING_SLASH","__NEXT_DATA__","nextExport","_rewriteUrlForNextExport","abortComponentLoad","onlyAHashChange","scrollToHash","_url_1$parse","parse","urlIsNew","_options$shallow","shallow","substring","set","_this4","cachedRouteInfo","fetchComponent","_require","isValidElementType","ctx","getInitialProps","catch","code","gipErr","beforePopState","cb","_this$asPath$split","split","_this$asPath$split2","oldUrlNoHash","oldHash","_as$split","_as$split2","newUrlNoHash","newHash","_as$split3","_as$split4","scrollTo","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","prefetch","_this5","__NEXT_EXPERIMENTAL_DEBUG","_url_1$parse2","_fetchComponent","_callee","cancel","_context","loadPage","_x","apply","_getInitialProps","_callee2","_context2","loadGetInitialProps","router","_x2","_x3","forEach","fn","subscribe","_this6","add","delete","_url$split","_url$split2","_pathname$split","_pathname$split2","qs","test"],"sources":["C:/Users/Sathyajothi/Desktop/BlockChainVoting/node_modules/next-server/dist/lib/router/router.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, Component, err }) {\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state.options && e.state.options.fromExternal) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = { Component, props: initialProps, err };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        // @ts-ignore backwards compatibility\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.subscriptions = new Set();\n        this.componentLoadCancel = null;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n            window.addEventListener('unload', () => {\n                // Workaround for popstate firing on initial page load when\n                // navigating back from an external site\n                if (history.state) {\n                    const { url, as, options } = history.state;\n                    this.changeState('replaceState', url, as, Object.assign({}, options, { fromExternal: true }));\n                }\n            });\n        }\n    }\n    static _rewriteUrlForNextExport(url) {\n        const [pathname, hash] = url.split('#');\n        // tslint:disable-next-line\n        let [path, qs] = pathname.split('?');\n        path = path.replace(/\\/$/, '');\n        // Append a trailing slash if this path does not have an extension\n        if (!/\\.[^/]+\\/?$/.test(path))\n            path += `/`;\n        if (qs)\n            path += '?' + qs;\n        if (hash)\n            path += '#' + hash;\n        return path;\n    }\n    update(route, Component) {\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign({}, data, { Component });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload(route) {\n        return new Promise((resolve, reject) => {\n            delete this.components[route];\n            this.pageLoader.clearCache(route);\n            if (route !== this.route) {\n                return resolve();\n            }\n            const { pathname, query } = this;\n            const url = window.location.href;\n            // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.\n            const as = window.location.pathname + window.location.search + window.location.hash;\n            Router.events.emit('routeChangeStart', url);\n            this.getRouteInfo(route, pathname, query, as).then((routeInfo) => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve();\n                }\n                this.notify(routeInfo);\n                if (error) {\n                    Router.events.emit('routeChangeError', error, url);\n                    return reject(error);\n                }\n                Router.events.emit('routeChangeComplete', url);\n            });\n        });\n    }\n    back() {\n        window.history.back();\n    }\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = Router._rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            if (this.onlyAHashChange(as)) {\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, as);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return true;\n            }\n            const { pathname, query } = url_1.parse(url, true);\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            // @ts-ignore pathname is always a string\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            // @ts-ignore pathname is always a string\n            this.getRouteInfo(route, pathname, query, as, shallow).then((routeInfo) => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, as, options);\n                const hash = window.location.hash.substring(1);\n                // @ts-ignore pathname is always defined\n                this.set(route, pathname, query, as, Object.assign({}, routeInfo, { hash }));\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            // @ts-ignore method should always exist on history\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            // @ts-ignore method should always exist on history\n            window.history[method]({ url, as, options }, null, as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then((Component) => resolve({ Component }), reject);\n        }).then((routeInfo) => {\n            const { Component } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return new Promise((resolve, reject) => {\n                const ctx = { pathname, query, asPath: as };\n                this.getInitialProps(Component, ctx).then((props) => {\n                    routeInfo.props = props;\n                    this.components[route] = routeInfo;\n                    resolve(routeInfo);\n                }, reject);\n            });\n        }).catch((err) => {\n            return new Promise((resolve) => {\n                if (err.code === 'PAGE_LOAD_ERROR') {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error').then((Component) => {\n                    const routeInfo = { Component, err };\n                    const ctx = { err, pathname, query };\n                    return new Promise((resolve) => {\n                        this.getInitialProps(Component, ctx).then((props) => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, (gipErr) => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                }));\n            });\n        });\n    }\n    set(route, pathname, query, as, data) {\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && (oldUrlNoHash === newUrlNoHash) && (oldHash === newHash)) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    prefetch(url) {\n        return new Promise((resolve, reject) => {\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production' || process.env.__NEXT_EXPERIMENTAL_DEBUG)\n                return;\n            const { pathname } = url_1.parse(url);\n            // @ts-ignore pathname is always defined\n            const route = toRoute(pathname);\n            this.pageLoader.prefetch(route).then(resolve, reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = this.componentLoadCancel = () => {\n            cancelled = true;\n        };\n        const Component = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.componentLoadCancel) {\n            this.componentLoadCancel = null;\n        }\n        return Component;\n    }\n    async getInitialProps(Component, ctx) {\n        let cancelled = false;\n        const cancel = () => { cancelled = true; };\n        this.componentLoadCancel = cancel;\n        const { Component: App } = this.components['/_app'];\n        const props = await utils_1.loadGetInitialProps(App, { Component, router: this, ctx });\n        if (cancel === this.componentLoadCancel) {\n            this.componentLoadCancel = null;\n        }\n        if (cancelled) {\n            const err = new Error('Loading initial props cancelled');\n            err.cancelled = true;\n            throw err;\n        }\n        return props;\n    }\n    abortComponentLoad(as) {\n        if (this.componentLoadCancel) {\n            Router.events.emit('routeChangeError', new Error('Route Cancelled'), as);\n            this.componentLoadCancel();\n            this.componentLoadCancel = null;\n        }\n    }\n    notify(data) {\n        const { Component: App } = this.components['/_app'];\n        this.subscriptions.forEach((fn) => fn(Object.assign({}, data, { App })));\n    }\n    subscribe(fn) {\n        this.subscriptions.add(fn);\n        return () => this.subscriptions.delete(fn);\n    }\n}\nRouter.events = mitt_1.default();\nexports.default = Router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}