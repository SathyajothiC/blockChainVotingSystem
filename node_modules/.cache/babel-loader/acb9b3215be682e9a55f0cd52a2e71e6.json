{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? _Reflect$construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport { Grid, Step, Icon, Menu, Sidebar, Header, Button, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport Cookies from 'js-cookie';\nimport { Link, Router } from '../../routes';\nimport { Helmet } from 'react-helmet';\nimport { getSharedElectionData } from '../../components/sharedElectionData ';\nvar CompanyDashboard = /*#__PURE__*/function (_Component) {\n  function CompanyDashboard() {\n    var _this;\n    _classCallCheck(this, CompanyDashboard);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, CompanyDashboard, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      electionData: getSharedElectionData(),\n      loading: false,\n      chartData: null,\n      pieData: null\n    });\n    _defineProperty(_this, \"generateChartData\", function () {\n      var electionData = _this.state.electionData;\n      var backgroundColors = ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(199, 199, 199, 0.6)', 'rgba(83, 102, 255, 0.6)', 'rgba(40, 159, 64, 0.6)', 'rgba(210, 199, 199, 0.6)'];\n      var borderColors = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(199, 199, 199, 1)', 'rgba(83, 102, 255, 1)', 'rgba(40, 159, 64, 1)', 'rgba(210, 199, 199, 1)'];\n      var chartData = {\n        labels: electionData.candidateData.map(function (candidate) {\n          return candidate.name;\n        }),\n        datasets: [{\n          label: 'Vote Counts',\n          backgroundColor: backgroundColors.slice(0, electionData.candidateData.length),\n          borderColor: borderColors.slice(0, electionData.candidateData.length),\n          borderWidth: 2,\n          hoverBackgroundColor: backgroundColors.map(function (color) {\n            return color.replace('0.6', '0.8');\n          }).slice(0, electionData.candidateData.length),\n          hoverBorderColor: borderColors.slice(0, electionData.candidateData.length),\n          data: electionData.candidateData.map(function (candidate) {\n            return candidate.votes;\n          })\n        }]\n      };\n      var pieData = {\n        labels: electionData.candidateData.map(function (candidate) {\n          return candidate.name;\n        }),\n        datasets: [{\n          data: electionData.candidateData.map(function (candidate) {\n            return candidate.votes;\n          }),\n          backgroundColor: backgroundColors.slice(0, electionData.candidateData.length),\n          borderColor: borderColors.slice(0, electionData.candidateData.length),\n          borderWidth: 2,\n          hoverBackgroundColor: backgroundColors.map(function (color) {\n            return color.replace('0.6', '0.8');\n          }).slice(0, electionData.candidateData.length),\n          hoverBorderColor: borderColors.slice(0, electionData.candidateData.length)\n        }]\n      };\n      _this.setState({\n        chartData: chartData,\n        pieData: pieData\n      });\n    });\n    _defineProperty(_this, \"getElectionDetails\", function () {\n      var electionData = _this.state.electionData;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: '2%',\n          marginTop: '2%'\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"address card\"\n      }), /*#__PURE__*/React.createElement(Header.Content, null, electionData.name, /*#__PURE__*/React.createElement(Header.Subheader, null, electionData.description, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '5px',\n          fontSize: '0.8em',\n          color: electionData.electionStatus === 'active' ? 'green' : 'gray'\n        }\n      }, \"Status: \", electionData.electionStatus.toUpperCase())))));\n    });\n    _defineProperty(_this, \"SidebarExampleVisible\", function () {\n      return /*#__PURE__*/React.createElement(Sidebar.Pushable, null, /*#__PURE__*/React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: '10px'\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"MENU\"), /*#__PURE__*/React.createElement(\"hr\", null)), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(_this.state.electionData.address, \"/company_dashboard\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        style: {\n          color: 'grey',\n          fontColor: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"))), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(_this.state.electionData.address, \"/candidate_list\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"))), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(_this.state.electionData.address, \"/voting_list\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Button, {\n        onClick: _this.signOut,\n        style: {\n          backgroundColor: 'white'\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\"))));\n    });\n    _defineProperty(_this, \"signOut\", function () {\n      Cookies.remove('address');\n      Cookies.remove('company_email');\n      Cookies.remove('company_id');\n      alert('Logging out.');\n      Router.pushRoute('/homepage');\n    });\n    _defineProperty(_this, \"refreshData\", function () {\n      _this.setState({\n        electionData: getSharedElectionData()\n      }, function () {\n        _this.generateChartData();\n      });\n    });\n    _defineProperty(_this, \"endElection\", function () {\n      _this.setState({\n        loading: true\n      });\n\n      // Simulate API call to end election\n      setTimeout(function () {\n        _this.setState({\n          loading: false,\n          electionData: _objectSpread({}, _this.state.electionData, {\n            electionStatus: 'completed'\n          })\n        });\n        alert('Election has been ended successfully! Results have been sent to all participants.');\n      }, 1500);\n    });\n    return _this;\n  }\n  _inherits(CompanyDashboard, _Component);\n  return _createClass(CompanyDashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateChartData();\n      // Set the election address in cookies for other components\n      Cookies.set('address', this.state.electionData.address);\n      Cookies.set('election_name', this.state.electionData.name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        electionData = _this$state.electionData,\n        chartData = _this$state.chartData,\n        pieData = _this$state.pieData,\n        loading = _this$state.loading;\n      if (!chartData || !pieData) {\n        return /*#__PURE__*/React.createElement(\"div\", null, \"Loading...\");\n      }\n      var chartOptions = {\n        maintainAspectRatio: true,\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 10\n            }\n          }]\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      };\n      var pieOptions = {\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      };\n\n      // Find the leading candidate\n      var leadingCandidate = electionData.candidateData.length > 0 ? electionData.candidateData.reduce(function (prev, current) {\n        return prev.votes > current.votes ? prev : current;\n      }) : null;\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Helmet, null, /*#__PURE__*/React.createElement(\"title\", null, \"Dashboard - \", electionData.name), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"shortcut icon\",\n        type: \"image/x-icon\",\n        href: \"../../static/logo-Block.png\"\n      })), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 14\n      }, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Message, {\n        info: true\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"info circle\"\n      }), \"This is a demonstration dashboard using sample election data.\"), this.getElectionDetails(), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: 'right',\n          marginTop: '2%'\n        }\n      }, electionData.electionStatus === 'active' && /*#__PURE__*/React.createElement(Button, {\n        negative: true,\n        style: {\n          marginRight: '10px'\n        },\n        onClick: this.endElection,\n        loading: loading\n      }, \"End Election\"), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: this.refreshData\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"refresh\"\n      }), \"Refresh Data\")), /*#__PURE__*/React.createElement(Step.Group, {\n        style: {\n          minWidth: '100%',\n          minHeight: 90\n        }\n      }, /*#__PURE__*/React.createElement(Step, {\n        icon: \"users\",\n        title: \"Total Voters\",\n        description: electionData.voters\n      }), /*#__PURE__*/React.createElement(Step, {\n        icon: \"user outline\",\n        title: \"Candidates\",\n        description: electionData.candidates\n      }), /*#__PURE__*/React.createElement(Step, {\n        icon: \"check square\",\n        title: \"Votes Cast\",\n        description: electionData.totalVotes\n      }), /*#__PURE__*/React.createElement(Step, {\n        icon: \"percent\",\n        title: \"Participation Rate\",\n        description: \"\".concat(Math.round(electionData.totalVotes / electionData.voters * 100), \"%\")\n      })), /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 8\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"bar chart\"\n      }), \"Vote Distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '400px',\n          padding: '20px'\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: chartData,\n        options: chartOptions,\n        height: 100\n      }))), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 8\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"pie chart\"\n      }), \"Results Overview\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '400px',\n          padding: '20px'\n        }\n      }, /*#__PURE__*/React.createElement(Pie, {\n        data: pieData,\n        options: pieOptions,\n        height: 100\n      })))), /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 16\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"trophy\"\n      }), \"Current Leader\"), leadingCandidate ? /*#__PURE__*/React.createElement(Message, {\n        positive: true\n      }, /*#__PURE__*/React.createElement(Message.Header, null, leadingCandidate.name, \" - \", leadingCandidate.votes, \" votes\"), /*#__PURE__*/React.createElement(\"p\", null, leadingCandidate.position, \" - \", leadingCandidate.bio)) : /*#__PURE__*/React.createElement(Message, {\n        warning: true\n      }, /*#__PURE__*/React.createElement(Message.Header, null, \"No candidates yet\"), /*#__PURE__*/React.createElement(\"p\", null, \"Add candidates to see election results\")))))))));\n    }\n  }]);\n}(Component);\nexport default CompanyDashboard;","map":{"version":3,"names":["React","Component","Grid","Step","Icon","Menu","Sidebar","Header","Button","Message","Layout","Bar","Pie","Cookies","Link","Router","Helmet","getSharedElectionData","CompanyDashboard","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","electionData","loading","chartData","pieData","state","backgroundColors","borderColors","labels","candidateData","map","candidate","name","datasets","label","backgroundColor","slice","borderColor","borderWidth","hoverBackgroundColor","color","replace","hoverBorderColor","data","votes","setState","createElement","style","marginBottom","marginTop","as","Content","Subheader","description","fontSize","electionStatus","toUpperCase","Pushable","animation","icon","inverted","vertical","visible","width","Item","route","address","fontColor","onClick","signOut","remove","alert","pushRoute","generateChartData","setTimeout","_objectSpread","_inherits","_createClass","key","value","componentDidMount","set","render","_this$state","chartOptions","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","stepSize","legend","display","position","pieOptions","leadingCandidate","reduce","prev","current","rel","type","href","Row","Column","SidebarExampleVisible","info","getElectionDetails","float","negative","marginRight","endElection","primary","refreshData","Group","minWidth","minHeight","title","voters","candidates","totalVotes","Math","round","textAlign","height","padding","options","positive","bio","warning"],"sources":["C:/Users/Sathyajothi/Desktop/blockChainVotingSystem/pages/election/company_dashboard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Step, Icon, Menu, Sidebar, Header, Button, Message } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport Cookies from 'js-cookie';\r\nimport { Link, Router } from '../../routes';\r\nimport { Helmet } from 'react-helmet';\r\nimport { getSharedElectionData } from '../../components/sharedElectionData ';\r\n\r\nclass CompanyDashboard extends Component {\r\n    state = {\r\n        electionData: getSharedElectionData(),\r\n        loading: false,\r\n        chartData: null,\r\n        pieData: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.generateChartData();\r\n        // Set the election address in cookies for other components\r\n        Cookies.set('address', this.state.electionData.address);\r\n        Cookies.set('election_name', this.state.electionData.name);\r\n    }\r\n\r\n    generateChartData = () => {\r\n        const { electionData } = this.state;\r\n\r\n        const backgroundColors = [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(199, 199, 199, 0.6)',\r\n            'rgba(83, 102, 255, 0.6)',\r\n            'rgba(40, 159, 64, 0.6)',\r\n            'rgba(210, 199, 199, 0.6)'\r\n        ];\r\n\r\n        const borderColors = [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)',\r\n            'rgba(199, 199, 199, 1)',\r\n            'rgba(83, 102, 255, 1)',\r\n            'rgba(40, 159, 64, 1)',\r\n            'rgba(210, 199, 199, 1)'\r\n        ];\r\n\r\n        const chartData = {\r\n            labels: electionData.candidateData.map(candidate => candidate.name),\r\n            datasets: [{\r\n                label: 'Vote Counts',\r\n                backgroundColor: backgroundColors.slice(0, electionData.candidateData.length),\r\n                borderColor: borderColors.slice(0, electionData.candidateData.length),\r\n                borderWidth: 2,\r\n                hoverBackgroundColor: backgroundColors.map(color => color.replace('0.6', '0.8')).slice(0, electionData.candidateData.length),\r\n                hoverBorderColor: borderColors.slice(0, electionData.candidateData.length),\r\n                data: electionData.candidateData.map(candidate => candidate.votes),\r\n            }]\r\n        };\r\n\r\n        const pieData = {\r\n            labels: electionData.candidateData.map(candidate => candidate.name),\r\n            datasets: [{\r\n                data: electionData.candidateData.map(candidate => candidate.votes),\r\n                backgroundColor: backgroundColors.slice(0, electionData.candidateData.length),\r\n                borderColor: borderColors.slice(0, electionData.candidateData.length),\r\n                borderWidth: 2,\r\n                hoverBackgroundColor: backgroundColors.map(color => color.replace('0.6', '0.8')).slice(0, electionData.candidateData.length),\r\n                hoverBorderColor: borderColors.slice(0, electionData.candidateData.length),\r\n            }]\r\n        };\r\n\r\n        this.setState({ chartData, pieData });\r\n    }\r\n\r\n    getElectionDetails = () => {\r\n        const { electionData } = this.state;\r\n\r\n        return (\r\n            <div style={{ marginBottom: '2%', marginTop: '2%' }}>\r\n                <Header as=\"h2\">\r\n                    <Icon name=\"address card\" />\r\n                    <Header.Content>\r\n                        {electionData.name}\r\n                        <Header.Subheader>\r\n                            {electionData.description}\r\n                            <div style={{ marginTop: '5px', fontSize: '0.8em', color: electionData.electionStatus === 'active' ? 'green' : 'gray' }}>\r\n                                Status: {electionData.electionStatus.toUpperCase()}\r\n                            </div>\r\n                        </Header.Subheader>\r\n                    </Header.Content>\r\n                </Header>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    SidebarExampleVisible = () => (\r\n        <Sidebar.Pushable>\r\n            <Sidebar\r\n                as={Menu}\r\n                animation=\"overlay\"\r\n                icon=\"labeled\"\r\n                inverted\r\n                vertical\r\n                visible\r\n                width=\"thin\"\r\n                style={{ backgroundColor: 'white', borderWidth: '10px' }}\r\n            >\r\n                <Menu.Item as=\"a\" style={{ color: 'grey' }}>\r\n                    <h2>MENU</h2>\r\n                    <hr />\r\n                </Menu.Item>\r\n                <Link route={`/election/${this.state.electionData.address}/company_dashboard`}>\r\n                    <a>\r\n                        <Menu.Item style={{ color: 'grey', fontColor: 'grey' }}>\r\n                            <Icon name=\"dashboard\" />\r\n                            Dashboard\r\n                        </Menu.Item>\r\n                    </a>\r\n                </Link>\r\n                <Link route={`/election/${this.state.electionData.address}/candidate_list`}>\r\n                    <a>\r\n                        <Menu.Item as=\"a\" style={{ color: 'grey' }}>\r\n                            <Icon name=\"user outline\" />\r\n                            Candidate List\r\n                        </Menu.Item>\r\n                    </a>\r\n                </Link>\r\n                <Link route={`/election/${this.state.electionData.address}/voting_list`}>\r\n                    <a>\r\n                        <Menu.Item as=\"a\" style={{ color: 'grey' }}>\r\n                            <Icon name=\"list\" />\r\n                            Voter List\r\n                        </Menu.Item>\r\n                    </a>\r\n                </Link>\r\n                <hr />\r\n                <Button onClick={this.signOut} style={{ backgroundColor: 'white' }}>\r\n                    <Menu.Item as=\"a\" style={{ color: 'grey' }}>\r\n                        <Icon name=\"sign out\" />\r\n                        Sign Out\r\n                    </Menu.Item>\r\n                </Button>\r\n            </Sidebar>\r\n        </Sidebar.Pushable>\r\n    );\r\n\r\n    signOut = () => {\r\n        Cookies.remove('address');\r\n        Cookies.remove('company_email');\r\n        Cookies.remove('company_id');\r\n        alert('Logging out.');\r\n        Router.pushRoute('/homepage');\r\n    };\r\n\r\n    refreshData = () => {\r\n        this.setState({\r\n            electionData: getSharedElectionData()\r\n        }, () => {\r\n            this.generateChartData();\r\n        });\r\n    }\r\n\r\n    endElection = () => {\r\n        this.setState({ loading: true });\r\n\r\n        // Simulate API call to end election\r\n        setTimeout(() => {\r\n            this.setState({\r\n                loading: false,\r\n                electionData: {\r\n                    ...this.state.electionData,\r\n                    electionStatus: 'completed'\r\n                }\r\n            });\r\n            alert('Election has been ended successfully! Results have been sent to all participants.');\r\n        }, 1500);\r\n    };\r\n\r\n    render() {\r\n        const { electionData, chartData, pieData, loading } = this.state;\r\n\r\n        if (!chartData || !pieData) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        const chartOptions = {\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 10\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                display: true,\r\n                position: 'bottom'\r\n            }\r\n        };\r\n\r\n        const pieOptions = {\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            legend: {\r\n                display: true,\r\n                position: 'bottom'\r\n            }\r\n        };\r\n\r\n        // Find the leading candidate\r\n        const leadingCandidate = electionData.candidateData.length > 0\r\n            ? electionData.candidateData.reduce((prev, current) =>\r\n                (prev.votes > current.votes) ? prev : current)\r\n            : null;\r\n\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>Dashboard - {electionData.name}</title>\r\n                    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../../static/logo-Block.png\" />\r\n                </Helmet>\r\n\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={2}>\r\n                            {this.SidebarExampleVisible()}\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={14}>\r\n                            <Layout>\r\n                                <Message info>\r\n                                    <Icon name=\"info circle\" />\r\n                                    This is a demonstration dashboard using sample election data.\r\n                                </Message>\r\n\r\n                                {this.getElectionDetails()}\r\n\r\n                                <div style={{ float: 'right', marginTop: '2%' }}>\r\n                                    {electionData.electionStatus === 'active' && (\r\n                                        <Button\r\n                                            negative\r\n                                            style={{ marginRight: '10px' }}\r\n                                            onClick={this.endElection}\r\n                                            loading={loading}\r\n                                        >\r\n                                            End Election\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        primary\r\n                                        onClick={this.refreshData}\r\n                                    >\r\n                                        <Icon name=\"refresh\" />\r\n                                        Refresh Data\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <Step.Group style={{ minWidth: '100%', minHeight: 90 }}>\r\n                                    <Step icon=\"users\" title=\"Total Voters\" description={electionData.voters} />\r\n                                    <Step icon=\"user outline\" title=\"Candidates\" description={electionData.candidates} />\r\n                                    <Step icon=\"check square\" title=\"Votes Cast\" description={electionData.totalVotes} />\r\n                                    <Step\r\n                                        icon=\"percent\"\r\n                                        title=\"Participation Rate\"\r\n                                        description={`${Math.round((electionData.totalVotes / electionData.voters) * 100)}%`}\r\n                                    />\r\n                                </Step.Group>\r\n\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                            <Icon name=\"bar chart\" />\r\n                                            Vote Distribution\r\n                                        </Header>\r\n                                        <div style={{ height: '400px', padding: '20px' }}>\r\n                                            <Bar\r\n                                                data={chartData}\r\n                                                options={chartOptions}\r\n                                                height={100}\r\n                                            />\r\n                                        </div>\r\n                                    </Grid.Column>\r\n\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                            <Icon name=\"pie chart\" />\r\n                                            Results Overview\r\n                                        </Header>\r\n                                        <div style={{ height: '400px', padding: '20px' }}>\r\n                                            <Pie\r\n                                                data={pieData}\r\n                                                options={pieOptions}\r\n                                                height={100}\r\n                                            />\r\n                                        </div>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={16}>\r\n                                        <Header as=\"h3\">\r\n                                            <Icon name=\"trophy\" />\r\n                                            Current Leader\r\n                                        </Header>\r\n                                        {leadingCandidate ? (\r\n                                            <Message positive>\r\n                                                <Message.Header>\r\n                                                    {leadingCandidate.name} - {leadingCandidate.votes} votes\r\n                                                </Message.Header>\r\n                                                <p>{leadingCandidate.position} - {leadingCandidate.bio}</p>\r\n                                            </Message>\r\n                                        ) : (\r\n                                            <Message warning>\r\n                                                <Message.Header>\r\n                                                    No candidates yet\r\n                                                </Message.Header>\r\n                                                <p>Add candidates to see election results</p>\r\n                                            </Message>\r\n                                        )}\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Layout>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanyDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}