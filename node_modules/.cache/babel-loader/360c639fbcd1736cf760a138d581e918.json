{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof _Symbol ? _Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = _Object$create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = _Object$getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(c); function f(e) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = _Object$create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = _Object$defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? _Reflect$construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport { Grid, Button, Form, Header, Icon, Menu, Sidebar, Container, Card, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport web3 from '../../Ethereum/web3';\nimport Cookies from 'js-cookie';\nimport { Link, Router } from '../../routes';\nimport Election from '../../Ethereum/election';\nimport { Helmet } from 'react-helmet';\nimport { addCandidateToSharedData, getSharedElectionData } from '../../components/sharedElectionData';\nvar VotingList = /*#__PURE__*/function (_Component) {\n  function VotingList() {\n    var _this;\n    _classCallCheck(this, VotingList);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, VotingList, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      election_address: Cookies.get('address') || getSharedElectionData().address,\n      election_name: getSharedElectionData().name,\n      election_description: getSharedElectionData().description,\n      candidates: getSharedElectionData().candidateData,\n      cand_name: '',\n      cand_desc: '',\n      cand_email: '',\n      loading: false,\n      useSampleData: true,\n      item: [],\n      error: null,\n      success: null\n    });\n    _defineProperty(_this, \"setSampleCandidates\", function () {\n      var electionData = getSharedElectionData();\n      var i = -1;\n      var items = electionData.candidateData.map(function (candidate) {\n        i++;\n        return {\n          header: candidate.name,\n          description: candidate.position,\n          meta: candidate.bio,\n          extra: /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Icon, {\n            name: \"pie graph\"\n          }), candidate.votes.toString(), \" votes\")\n        };\n      });\n      _this.setState({\n        item: items,\n        useSampleData: true,\n        election_name: electionData.name,\n        election_description: electionData.description\n      });\n    });\n    _defineProperty(_this, \"getElectionDetails\", function () {\n      var _this$state = _this.state,\n        election_name = _this$state.election_name,\n        election_description = _this$state.election_description;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '2%',\n          marginTop: '2%'\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"address card\"\n      }), /*#__PURE__*/React.createElement(Header.Content, null, election_name, /*#__PURE__*/React.createElement(Header.Subheader, null, election_description))));\n    });\n    _defineProperty(_this, \"renderTable\", function () {\n      var _this$state2 = _this.state,\n        item = _this$state2.item,\n        useSampleData = _this$state2.useSampleData;\n      if (item.length === 0) {\n        return /*#__PURE__*/React.createElement(Message, {\n          info: true\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"info circle\"\n        }), \"No candidates found. Add candidates using the form on the right.\");\n      }\n      return /*#__PURE__*/React.createElement(\"div\", null, useSampleData && /*#__PURE__*/React.createElement(Message, {\n        warning: true\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"warning sign\"\n      }), \"Using sample data for demonstration purposes\"), /*#__PURE__*/React.createElement(Card.Group, {\n        items: item\n      }));\n    });\n    _defineProperty(_this, \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(event) {\n        var _this$state3, cand_name, cand_desc, cand_email, useSampleData, accounts, add, election, defaultIpfsHash, response, responseData, _t, _t2;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              event.preventDefault();\n              _this.setState({\n                loading: true,\n                error: null,\n                success: null\n              });\n              _this$state3 = _this.state, cand_name = _this$state3.cand_name, cand_desc = _this$state3.cand_desc, cand_email = _this$state3.cand_email, useSampleData = _this$state3.useSampleData;\n              if (!(!cand_name || !cand_desc || !cand_email)) {\n                _context.n = 1;\n                break;\n              }\n              _this.setState({\n                error: \"Please fill in all fields\",\n                loading: false\n              });\n              return _context.a(2);\n            case 1:\n              if (!useSampleData) {\n                _context.n = 2;\n                break;\n              }\n              // For sample data - add to shared data\n              setTimeout(function () {\n                var newCandidate = {\n                  name: cand_name,\n                  position: cand_desc,\n                  email: cand_email,\n                  votes: 0,\n                  bio: \"New candidate\"\n                };\n\n                // Add to shared data\n                addCandidateToSharedData(newCandidate);\n\n                // Update the UI with the new candidate\n                var newItem = {\n                  header: newCandidate.name,\n                  description: newCandidate.position,\n                  meta: newCandidate.bio,\n                  extra: /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Icon, {\n                    name: \"pie graph\"\n                  }), newCandidate.votes.toString(), \" votes\")\n                };\n                _this.setState(function (prevState) {\n                  return {\n                    item: [].concat(_toConsumableArray(prevState.item), [newItem]),\n                    loading: false,\n                    success: \"Candidate added to sample data! Refresh dashboard to see updates.\",\n                    cand_name: '',\n                    cand_desc: '',\n                    cand_email: ''\n                  };\n                });\n              }, 1000);\n              return _context.a(2);\n            case 2:\n              _context.p = 2;\n              _context.n = 3;\n              return web3.eth.getAccounts();\n            case 3:\n              accounts = _context.v;\n              add = Cookies.get('address');\n              election = Election(add); // Use a default IPFS hash (empty or placeholder)\n              defaultIpfsHash = 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'; // Add candidate to blockchain\n              _context.n = 4;\n              return election.methods.addCandidate(cand_name, cand_desc, defaultIpfsHash, cand_email).send({\n                from: accounts[0],\n                gas: 300000\n              });\n            case 4:\n              _context.p = 4;\n              _context.n = 5;\n              return fetch('/candidate/registerCandidate', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: \"email=\".concat(encodeURIComponent(cand_email), \"&election_name=\").concat(encodeURIComponent(_this.state.election_name))\n              });\n            case 5:\n              response = _context.v;\n              _context.n = 6;\n              return response.json();\n            case 6:\n              responseData = _context.v;\n              if (!(responseData.status === \"success\")) {\n                _context.n = 7;\n                break;\n              }\n              _this.setState({\n                success: \"Candidate added successfully to blockchain and database!\",\n                loading: false,\n                cand_name: '',\n                cand_desc: '',\n                cand_email: ''\n              });\n\n              // Reload candidates\n              _this.componentDidMount();\n              _context.n = 8;\n              break;\n            case 7:\n              throw new Error(responseData.message || \"Failed to register candidate in database\");\n            case 8:\n              _context.n = 10;\n              break;\n            case 9:\n              _context.p = 9;\n              _t = _context.v;\n              console.error(\"Database error:\", _t);\n              _this.setState({\n                error: \"Candidate added to blockchain but failed to register in database: \" + _t.message,\n                loading: false\n              });\n            case 10:\n              _context.n = 12;\n              break;\n            case 11:\n              _context.p = 11;\n              _t2 = _context.v;\n              console.error(\"Error adding candidate:\", _t2);\n              _this.setState({\n                error: \"Failed to add candidate: \" + _t2.message,\n                loading: false\n              });\n            case 12:\n              return _context.a(2);\n          }\n        }, _callee, null, [[4, 9], [2, 11]]);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _defineProperty(_this, \"SidebarExampleVisible\", function () {\n      return /*#__PURE__*/React.createElement(Sidebar.Pushable, null, /*#__PURE__*/React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"MENU\"), /*#__PURE__*/React.createElement(\"hr\", null)), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(Cookies.get('address'), \"/company_dashboard\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"))), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(Cookies.get('address'), \"/candidate_list\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"))), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(Cookies.get('address'), \"/voting_list\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Button, {\n        onClick: _this.signOut,\n        style: {\n          backgroundColor: 'white'\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\"))));\n    });\n    _defineProperty(_this, \"signOut\", function () {\n      Cookies.remove('address');\n      Cookies.remove('company_email');\n      Cookies.remove('company_id');\n      alert(\"Logging out.\");\n      Router.pushRoute('/homepage');\n    });\n    return _this;\n  }\n  _inherits(VotingList, _Component);\n  return _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var add, election, summary, c, candidates, _i, candidate, i, items, _t3;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              // Set cookies with sample data\n              if (!Cookies.get('address')) {\n                Cookies.set('address', getSharedElectionData().address);\n              }\n              _context2.p = 1;\n              // Try to get real data first\n              add = Cookies.get('address');\n              election = Election(add);\n              _context2.n = 2;\n              return election.methods.getElectionDetails().call();\n            case 2:\n              summary = _context2.v;\n              this.setState({\n                election_name: summary[0],\n                election_description: summary[1],\n                useSampleData: false\n              });\n              _context2.n = 3;\n              return election.methods.getNumOfCandidates().call();\n            case 3:\n              c = _context2.v;\n              if (!(c == 0)) {\n                _context2.n = 4;\n                break;\n              }\n              console.log(\"No candidates found in blockchain, using sample data\");\n              this.setSampleCandidates();\n              return _context2.a(2);\n            case 4:\n              candidates = [];\n              _i = 0;\n            case 5:\n              if (!(_i < c)) {\n                _context2.n = 8;\n                break;\n              }\n              _context2.n = 6;\n              return election.methods.getCandidate(_i).call();\n            case 6:\n              candidate = _context2.v;\n              candidates.push(candidate);\n            case 7:\n              _i++;\n              _context2.n = 5;\n              break;\n            case 8:\n              i = -1;\n              items = candidates.map(function (candidate) {\n                i++;\n                return {\n                  header: candidate[0],\n                  description: candidate[1],\n                  meta: candidate[2] || 'No description available',\n                  extra: /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Icon, {\n                    name: \"pie graph\"\n                  }), candidate[3] ? candidate[3].toString() : '0', \" votes\")\n                };\n              });\n              this.setState({\n                item: items,\n                useSampleData: false\n              });\n              _context2.n = 10;\n              break;\n            case 9:\n              _context2.p = 9;\n              _t3 = _context2.v;\n              console.log(\"Using sample data due to error:\", _t3.message);\n              this.setSampleCandidates();\n            case 10:\n              return _context2.a(2);\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state4 = this.state,\n        loading = _this$state4.loading,\n        error = _this$state4.error,\n        success = _this$state4.success,\n        cand_name = _this$state4.cand_name,\n        cand_desc = _this$state4.cand_desc,\n        cand_email = _this$state4.cand_email,\n        useSampleData = _this$state4.useSampleData;\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Helmet, null, /*#__PURE__*/React.createElement(\"title\", null, \"Candidate list!\"), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"shortcut icon\",\n        type: \"image/x-icon\",\n        href: \"../../static/logo-Block.png\"\n      })), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 14\n      }, /*#__PURE__*/React.createElement(Layout, null, this.getElectionDetails(), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 10\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Candidate List\"), /*#__PURE__*/React.createElement(Container, null, this.renderTable())), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 6\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\"\n      }, \"Add Candidate\"), /*#__PURE__*/React.createElement(Card, {\n        fluid: true\n      }, /*#__PURE__*/React.createElement(Card.Content, null, error && /*#__PURE__*/React.createElement(Message, {\n        negative: true\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"exclamation circle\"\n      }), error), success && /*#__PURE__*/React.createElement(Message, {\n        positive: true\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"check circle\"\n      }), success), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        label: \"Name\",\n        placeholder: \"Enter candidate name\",\n        value: cand_name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cand_name: event.target.value\n          });\n        },\n        required: true\n      }), /*#__PURE__*/React.createElement(Form.TextArea, {\n        label: \"Description\",\n        placeholder: \"Describe the candidate here...\",\n        value: cand_desc,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cand_desc: event.target.value\n          });\n        },\n        required: true\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        label: \"Email\",\n        type: \"email\",\n        placeholder: \"Enter candidate email\",\n        value: cand_email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            cand_email: event.target.value\n          });\n        },\n        required: true\n      }), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        fluid: true,\n        loading: loading,\n        disabled: loading,\n        style: {\n          marginTop: '15px'\n        }\n      }, useSampleData ? 'Add to Sample Data' : 'Register Candidate'), useSampleData && /*#__PURE__*/React.createElement(Message, {\n        info: true,\n        size: \"small\",\n        style: {\n          marginTop: '10px'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"info circle\"\n      }), \"This is a demonstration with sample data\"))))))))))));\n    }\n  }]);\n}(Component);\nexport default VotingList;","map":{"version":3,"names":["e","t","r","_Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","_Object$create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","_Object$getPrototypeOf","_Object$setPrototypeOf","__proto__","displayName","_regenerator","w","m","_Object$defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","_Reflect$construct","constructor","apply","Boolean","valueOf","React","Component","Grid","Button","Form","Header","Icon","Menu","Sidebar","Container","Card","Message","Layout","web3","Cookies","Link","Router","Election","Helmet","addCandidateToSharedData","getSharedElectionData","VotingList","_Component","_this","_classCallCheck","_len","arguments","args","Array","_key","concat","_defineProperty","election_address","get","address","election_name","name","election_description","description","candidates","candidateData","cand_name","cand_desc","cand_email","loading","useSampleData","item","error","success","electionData","items","map","candidate","header","position","meta","bio","extra","createElement","votes","toString","setState","_this$state","state","style","textAlign","marginBottom","marginTop","as","Content","Subheader","_this$state2","info","warning","Group","_ref","_asyncToGenerator","_callee","event","_this$state3","accounts","add","election","defaultIpfsHash","response","responseData","_t","_t2","_context","preventDefault","setTimeout","newCandidate","email","newItem","prevState","_toConsumableArray","eth","getAccounts","methods","addCandidate","send","from","gas","fetch","method","headers","body","encodeURIComponent","json","status","componentDidMount","Error","message","console","_x","Pushable","animation","icon","inverted","vertical","visible","width","backgroundColor","borderWidth","Item","color","route","onClick","signOut","remove","alert","pushRoute","_inherits","_createClass","key","_componentDidMount","_callee2","summary","_i","_t3","_context2","set","getElectionDetails","getNumOfCandidates","log","setSampleCandidates","getCandidate","push","render","_this2","_this$state4","rel","type","href","Row","Column","SidebarExampleVisible","renderTable","fluid","negative","positive","onSubmit","Input","label","placeholder","onChange","target","required","TextArea","primary","disabled","size"],"sources":["C:/Users/Sathyajothi/Desktop/BlockChainVoting/pages/election/candidate_list.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Button, Form, Header, Icon, Menu, Sidebar, Container, Card, Message } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport web3 from '../../Ethereum/web3';\r\nimport Cookies from 'js-cookie';\r\nimport { Link, Router } from '../../routes';\r\nimport Election from '../../Ethereum/election';\r\nimport { Helmet } from 'react-helmet';\r\nimport { addCandidateToSharedData, getSharedElectionData } from '../../components/sharedElectionData';\r\n\r\nclass VotingList extends Component {\r\n  state = {\r\n    election_address: Cookies.get('address') || getSharedElectionData().address,\r\n    election_name: getSharedElectionData().name,\r\n    election_description: getSharedElectionData().description,\r\n    candidates: getSharedElectionData().candidateData,\r\n    cand_name: '',\r\n    cand_desc: '',\r\n    cand_email: '',\r\n    loading: false,\r\n    useSampleData: true,\r\n    item: [],\r\n    error: null,\r\n    success: null\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Set cookies with sample data\r\n    if (!Cookies.get('address')) {\r\n      Cookies.set('address', getSharedElectionData().address);\r\n    }\r\n\r\n    try {\r\n      // Try to get real data first\r\n      const add = Cookies.get('address');\r\n      const election = Election(add);\r\n      const summary = await election.methods.getElectionDetails().call();\r\n\r\n      this.setState({\r\n        election_name: summary[0],\r\n        election_description: summary[1],\r\n        useSampleData: false\r\n      });\r\n\r\n      const c = await election.methods.getNumOfCandidates().call();\r\n\r\n      if (c == 0) {\r\n        console.log(\"No candidates found in blockchain, using sample data\");\r\n        this.setSampleCandidates();\r\n        return;\r\n      }\r\n\r\n      let candidates = [];\r\n      for (let i = 0; i < c; i++) {\r\n        const candidate = await election.methods.getCandidate(i).call();\r\n        candidates.push(candidate);\r\n      }\r\n\r\n      let i = -1;\r\n      const items = candidates.map(candidate => {\r\n        i++;\r\n        return {\r\n          header: candidate[0],\r\n          description: candidate[1],\r\n          meta: candidate[2] || 'No description available',\r\n          extra: (\r\n            <div>\r\n              <Icon name='pie graph' />\r\n              {candidate[3] ? candidate[3].toString() : '0'} votes\r\n            </div>\r\n          )\r\n        };\r\n      });\r\n\r\n      this.setState({\r\n        item: items,\r\n        useSampleData: false\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Using sample data due to error:\", err.message);\r\n      this.setSampleCandidates();\r\n    }\r\n  }\r\n\r\n  setSampleCandidates = () => {\r\n    const electionData = getSharedElectionData();\r\n    let i = -1;\r\n    const items = electionData.candidateData.map(candidate => {\r\n      i++;\r\n      return {\r\n        header: candidate.name,\r\n        description: candidate.position,\r\n        meta: candidate.bio,\r\n        extra: (\r\n          <div>\r\n            <Icon name='pie graph' />\r\n            {candidate.votes.toString()} votes\r\n          </div>\r\n        )\r\n      };\r\n    });\r\n    this.setState({\r\n      item: items,\r\n      useSampleData: true,\r\n      election_name: electionData.name,\r\n      election_description: electionData.description\r\n    });\r\n  }\r\n\r\n  getElectionDetails = () => {\r\n    const { election_name, election_description } = this.state;\r\n\r\n    return (\r\n      <div style={{ textAlign: 'center', marginBottom: '2%', marginTop: '2%' }}>\r\n        <Header as=\"h2\">\r\n          <Icon name=\"address card\" />\r\n          <Header.Content>\r\n            {election_name}\r\n            <Header.Subheader>{election_description}</Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTable = () => {\r\n    const { item, useSampleData } = this.state;\r\n\r\n    if (item.length === 0) {\r\n      return (\r\n        <Message info>\r\n          <Icon name=\"info circle\" />\r\n          No candidates found. Add candidates using the form on the right.\r\n        </Message>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {useSampleData && (\r\n          <Message warning>\r\n            <Icon name=\"warning sign\" />\r\n            Using sample data for demonstration purposes\r\n          </Message>\r\n        )}\r\n        <Card.Group items={item} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true, error: null, success: null });\r\n\r\n    const { cand_name, cand_desc, cand_email, useSampleData } = this.state;\r\n\r\n    if (!cand_name || !cand_desc || !cand_email) {\r\n      this.setState({\r\n        error: \"Please fill in all fields\",\r\n        loading: false\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (useSampleData) {\r\n      // For sample data - add to shared data\r\n      setTimeout(() => {\r\n        const newCandidate = {\r\n          name: cand_name,\r\n          position: cand_desc,\r\n          email: cand_email,\r\n          votes: 0,\r\n          bio: \"New candidate\"\r\n        };\r\n\r\n        // Add to shared data\r\n        addCandidateToSharedData(newCandidate);\r\n\r\n        // Update the UI with the new candidate\r\n        const newItem = {\r\n          header: newCandidate.name,\r\n          description: newCandidate.position,\r\n          meta: newCandidate.bio,\r\n          extra: (\r\n            <div>\r\n              <Icon name='pie graph' />\r\n              {newCandidate.votes.toString()} votes\r\n            </div>\r\n          )\r\n        };\r\n\r\n        this.setState(prevState => ({\r\n          item: [...prevState.item, newItem],\r\n          loading: false,\r\n          success: \"Candidate added to sample data! Refresh dashboard to see updates.\",\r\n          cand_name: '',\r\n          cand_desc: '',\r\n          cand_email: ''\r\n        }));\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    // Real blockchain operation\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      const add = Cookies.get('address');\r\n      const election = Election(add);\r\n\r\n      // Use a default IPFS hash (empty or placeholder)\r\n      const defaultIpfsHash = 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z';\r\n\r\n      // Add candidate to blockchain\r\n      await election.methods.addCandidate(\r\n        cand_name,\r\n        cand_desc,\r\n        defaultIpfsHash,\r\n        cand_email\r\n      ).send({\r\n        from: accounts[0],\r\n        gas: 300000\r\n      });\r\n\r\n      // Register candidate in backend\r\n      try {\r\n        const response = await fetch('/candidate/registerCandidate', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          body: `email=${encodeURIComponent(cand_email)}&election_name=${encodeURIComponent(this.state.election_name)}`\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (responseData.status === \"success\") {\r\n          this.setState({\r\n            success: \"Candidate added successfully to blockchain and database!\",\r\n            loading: false,\r\n            cand_name: '',\r\n            cand_desc: '',\r\n            cand_email: ''\r\n          });\r\n\r\n          // Reload candidates\r\n          this.componentDidMount();\r\n        } else {\r\n          throw new Error(responseData.message || \"Failed to register candidate in database\");\r\n        }\r\n      } catch (dbError) {\r\n        console.error(\"Database error:\", dbError);\r\n        this.setState({\r\n          error: \"Candidate added to blockchain but failed to register in database: \" + dbError.message,\r\n          loading: false\r\n        });\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(\"Error adding candidate:\", err);\r\n      this.setState({\r\n        error: \"Failed to add candidate: \" + err.message,\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  SidebarExampleVisible = () => (\r\n    <Sidebar.Pushable>\r\n      <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <h2>MENU</h2><hr />\r\n        </Menu.Item>\r\n        <Link route={`/election/${Cookies.get('address')}/company_dashboard`}>\r\n          <a>\r\n            <Menu.Item style={{ color: 'grey' }}>\r\n              <Icon name='dashboard' />\r\n              Dashboard\r\n            </Menu.Item>\r\n          </a>\r\n        </Link>\r\n        <Link route={`/election/${Cookies.get('address')}/candidate_list`}>\r\n          <a>\r\n            <Menu.Item as='a' style={{ color: 'grey' }}>\r\n              <Icon name='user outline' />\r\n              Candidate List\r\n            </Menu.Item>\r\n          </a>\r\n        </Link>\r\n        <Link route={`/election/${Cookies.get('address')}/voting_list`}>\r\n          <a>\r\n            <Menu.Item as='a' style={{ color: 'grey' }}>\r\n              <Icon name='list' />\r\n              Voter List\r\n            </Menu.Item>\r\n          </a>\r\n        </Link>\r\n        <hr />\r\n        <Button onClick={this.signOut} style={{ backgroundColor: 'white' }}>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='sign out' />\r\n            Sign Out\r\n          </Menu.Item>\r\n        </Button>\r\n      </Sidebar>\r\n    </Sidebar.Pushable>\r\n  )\r\n\r\n  signOut = () => {\r\n    Cookies.remove('address');\r\n    Cookies.remove('company_email');\r\n    Cookies.remove('company_id');\r\n    alert(\"Logging out.\");\r\n    Router.pushRoute('/homepage');\r\n  }\r\n\r\n  render() {\r\n    const { loading, error, success, cand_name, cand_desc, cand_email, useSampleData } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Candidate list!</title>\r\n          <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../../static/logo-Block.png\" />\r\n        </Helmet>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {this.SidebarExampleVisible()}\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              <Layout>\r\n                {this.getElectionDetails()}\r\n                <br />\r\n                <Grid>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={10}>\r\n                      <Header as='h2' color='black'>\r\n                        Candidate List\r\n                      </Header>\r\n                      <Container>\r\n                        {this.renderTable()}\r\n                      </Container>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                      <Header as='h2' color='black' textAlign='center'>\r\n                        Add Candidate\r\n                      </Header>\r\n                      <Card fluid>\r\n                        <Card.Content>\r\n                          {error && (\r\n                            <Message negative>\r\n                              <Icon name='exclamation circle' />\r\n                              {error}\r\n                            </Message>\r\n                          )}\r\n                          {success && (\r\n                            <Message positive>\r\n                              <Icon name='check circle' />\r\n                              {success}\r\n                            </Message>\r\n                          )}\r\n                          <Form onSubmit={this.onSubmit}>\r\n                            <Form.Input\r\n                              fluid\r\n                              label='Name'\r\n                              placeholder='Enter candidate name'\r\n                              value={cand_name}\r\n                              onChange={event => this.setState({ cand_name: event.target.value })}\r\n                              required\r\n                            />\r\n                            <Form.TextArea\r\n                              label='Description'\r\n                              placeholder='Describe the candidate here...'\r\n                              value={cand_desc}\r\n                              onChange={event => this.setState({ cand_desc: event.target.value })}\r\n                              required\r\n                            />\r\n                            <Form.Input\r\n                              fluid\r\n                              label='Email'\r\n                              type='email'\r\n                              placeholder='Enter candidate email'\r\n                              value={cand_email}\r\n                              onChange={event => this.setState({ cand_email: event.target.value })}\r\n                              required\r\n                            />\r\n                            <Button\r\n                              primary\r\n                              fluid\r\n                              loading={loading}\r\n                              disabled={loading}\r\n                              style={{ marginTop: '15px' }}\r\n                            >\r\n                              {useSampleData ? 'Add to Sample Data' : 'Register Candidate'}\r\n                            </Button>\r\n                            {useSampleData && (\r\n                              <Message info size='small' style={{ marginTop: '10px' }}>\r\n                                <Icon name='info circle' />\r\n                                This is a demonstration with sample data\r\n                              </Message>\r\n                            )}\r\n                          </Form>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Layout>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VotingList;"],"mappings":";;;;;;;;;;;;;;0BACA,uKAAAA,CAAA,EAAAC,CAAA,EAAAC,CAAA,wBAAAC,OAAA,GAAAA,OAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,WAAA,8BAAAC,EAAAN,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAL,CAAA,IAAAA,CAAA,CAAAM,SAAA,YAAAC,SAAA,GAAAP,CAAA,GAAAO,SAAA,EAAAC,CAAA,GAAAC,cAAA,CAAAJ,CAAA,CAAAC,SAAA,UAAAI,mBAAA,CAAAF,CAAA,uBAAAV,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAG,CAAA,MAAAC,CAAA,GAAAV,CAAA,QAAAW,CAAA,OAAAC,CAAA,KAAAF,CAAA,KAAAZ,CAAA,KAAAe,CAAA,EAAAnB,CAAA,EAAAoB,CAAA,EAAAC,CAAA,EAAAN,CAAA,EAAAM,CAAA,CAAAC,IAAA,CAAAtB,CAAA,MAAAqB,CAAA,WAAAA,EAAApB,CAAA,EAAAC,CAAA,WAAAM,CAAA,GAAAP,CAAA,EAAAQ,CAAA,MAAAG,CAAA,GAAAZ,CAAA,EAAAkB,CAAA,CAAAd,CAAA,GAAAF,CAAA,EAAAkB,CAAA,gBAAAC,EAAAnB,CAAA,EAAAE,CAAA,SAAAK,CAAA,GAAAP,CAAA,EAAAU,CAAA,GAAAR,CAAA,EAAAH,CAAA,OAAAgB,CAAA,IAAAF,CAAA,KAAAT,CAAA,IAAAL,CAAA,GAAAe,CAAA,CAAAO,MAAA,EAAAtB,CAAA,UAAAK,CAAA,EAAAE,CAAA,GAAAQ,CAAA,CAAAf,CAAA,GAAAoB,CAAA,GAAAH,CAAA,CAAAF,CAAA,EAAAQ,CAAA,GAAAhB,CAAA,KAAAN,CAAA,QAAAI,CAAA,GAAAkB,CAAA,KAAApB,CAAA,MAAAQ,CAAA,GAAAJ,CAAA,EAAAC,CAAA,GAAAD,CAAA,YAAAC,CAAA,WAAAD,CAAA,MAAAA,CAAA,MAAAR,CAAA,IAAAQ,CAAA,OAAAa,CAAA,MAAAf,CAAA,GAAAJ,CAAA,QAAAmB,CAAA,GAAAb,CAAA,QAAAC,CAAA,MAAAS,CAAA,CAAAC,CAAA,GAAAf,CAAA,EAAAc,CAAA,CAAAd,CAAA,GAAAI,CAAA,OAAAa,CAAA,GAAAG,CAAA,KAAAlB,CAAA,GAAAJ,CAAA,QAAAM,CAAA,MAAAJ,CAAA,IAAAA,CAAA,GAAAoB,CAAA,MAAAhB,CAAA,MAAAN,CAAA,EAAAM,CAAA,MAAAJ,CAAA,EAAAc,CAAA,CAAAd,CAAA,GAAAoB,CAAA,EAAAf,CAAA,cAAAH,CAAA,IAAAJ,CAAA,aAAAkB,CAAA,QAAAH,CAAA,OAAAb,CAAA,qBAAAE,CAAA,EAAAU,CAAA,EAAAQ,CAAA,QAAAT,CAAA,YAAAU,SAAA,uCAAAR,CAAA,UAAAD,CAAA,IAAAK,CAAA,CAAAL,CAAA,EAAAQ,CAAA,GAAAf,CAAA,GAAAO,CAAA,EAAAJ,CAAA,GAAAY,CAAA,GAAAvB,CAAA,GAAAQ,CAAA,OAAAT,CAAA,GAAAY,CAAA,MAAAK,CAAA,KAAAT,CAAA,KAAAC,CAAA,GAAAA,CAAA,QAAAA,CAAA,SAAAS,CAAA,CAAAd,CAAA,QAAAiB,CAAA,CAAAZ,CAAA,EAAAG,CAAA,KAAAM,CAAA,CAAAd,CAAA,GAAAQ,CAAA,GAAAM,CAAA,CAAAC,CAAA,GAAAP,CAAA,aAAAG,CAAA,MAAAP,CAAA,QAAAC,CAAA,KAAAH,CAAA,YAAAL,CAAA,GAAAO,CAAA,CAAAF,CAAA,WAAAL,CAAA,GAAAA,CAAA,CAAAyB,IAAA,CAAAlB,CAAA,EAAAI,CAAA,UAAAa,SAAA,2CAAAxB,CAAA,CAAA0B,IAAA,SAAA1B,CAAA,EAAAW,CAAA,GAAAX,CAAA,CAAA2B,KAAA,EAAAnB,CAAA,SAAAA,CAAA,oBAAAA,CAAA,KAAAR,CAAA,GAAAO,CAAA,CAAAqB,MAAA,KAAA5B,CAAA,CAAAyB,IAAA,CAAAlB,CAAA,GAAAC,CAAA,SAAAG,CAAA,GAAAa,SAAA,uCAAAnB,CAAA,gBAAAG,CAAA,OAAAD,CAAA,GAAAR,CAAA,cAAAC,CAAA,IAAAgB,CAAA,GAAAC,CAAA,CAAAd,CAAA,QAAAQ,CAAA,GAAAV,CAAA,CAAAwB,IAAA,CAAAtB,CAAA,EAAAc,CAAA,OAAAE,CAAA,kBAAAnB,CAAA,IAAAO,CAAA,GAAAR,CAAA,EAAAS,CAAA,MAAAG,CAAA,GAAAX,CAAA,cAAAc,CAAA,mBAAAa,KAAA,EAAA3B,CAAA,EAAA0B,IAAA,EAAAV,CAAA,SAAAf,CAAA,EAAAI,CAAA,EAAAE,CAAA,QAAAI,CAAA,QAAAQ,CAAA,gBAAAT,UAAA,cAAAmB,kBAAA,cAAAC,2BAAA,KAAA9B,CAAA,GAAA+B,sBAAA,MAAAvB,CAAA,MAAAL,CAAA,IAAAH,CAAA,CAAAA,CAAA,IAAAG,CAAA,SAAAU,mBAAA,CAAAb,CAAA,OAAAG,CAAA,iCAAAH,CAAA,GAAAW,CAAA,GAAAmB,0BAAA,CAAArB,SAAA,GAAAC,SAAA,CAAAD,SAAA,GAAAG,cAAA,CAAAJ,CAAA,YAAAM,EAAAf,CAAA,WAAAiC,sBAAA,GAAAA,sBAAA,CAAAjC,CAAA,EAAA+B,0BAAA,KAAA/B,CAAA,CAAAkC,SAAA,GAAAH,0BAAA,EAAAjB,mBAAA,CAAAd,CAAA,EAAAM,CAAA,yBAAAN,CAAA,CAAAU,SAAA,GAAAG,cAAA,CAAAD,CAAA,GAAAZ,CAAA,WAAA8B,iBAAA,CAAApB,SAAA,GAAAqB,0BAAA,EAAAjB,mBAAA,CAAAF,CAAA,iBAAAmB,0BAAA,GAAAjB,mBAAA,CAAAiB,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAK,WAAA,wBAAArB,mBAAA,CAAAiB,0BAAA,EAAAzB,CAAA,wBAAAQ,mBAAA,CAAAF,CAAA,GAAAE,mBAAA,CAAAF,CAAA,EAAAN,CAAA,gBAAAQ,mBAAA,CAAAF,CAAA,EAAAR,CAAA,iCAAAU,mBAAA,CAAAF,CAAA,8DAAAwB,YAAA,YAAAA,aAAA,aAAAC,CAAA,EAAA7B,CAAA,EAAA8B,CAAA,EAAAvB,CAAA;AAAA,SAAAD,oBAAAd,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAO,CAAA,GAAA+B,sBAAA,QAAA/B,CAAA,uBAAAR,CAAA,IAAAQ,CAAA,QAAAM,mBAAA,YAAA0B,mBAAAxC,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAC,CAAA,EAAAM,CAAA,GAAAA,CAAA,CAAAR,CAAA,EAAAE,CAAA,IAAA0B,KAAA,EAAAxB,CAAA,EAAAqC,UAAA,GAAAxC,CAAA,EAAAyC,YAAA,GAAAzC,CAAA,EAAA0C,QAAA,GAAA1C,CAAA,MAAAD,CAAA,CAAAE,CAAA,IAAAE,CAAA,YAAAE,CAAA,YAAAA,EAAAJ,CAAA,EAAAE,CAAA,IAAAU,mBAAA,CAAAd,CAAA,EAAAE,CAAA,YAAAF,CAAA,gBAAA4C,OAAA,CAAA1C,CAAA,EAAAE,CAAA,EAAAJ,CAAA,UAAAM,CAAA,aAAAA,CAAA,cAAAA,CAAA,oBAAAQ,mBAAA,CAAAd,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA;AAAA,SAAA4C,WAAA5C,CAAA,EAAAK,CAAA,EAAAN,CAAA,WAAAM,CAAA,GAAAwC,eAAA,CAAAxC,CAAA,GAAAyC,0BAAA,CAAA9C,CAAA,EAAA+C,yBAAA,KAAAC,kBAAA,CAAA3C,CAAA,EAAAN,CAAA,QAAA8C,eAAA,CAAA7C,CAAA,EAAAiD,WAAA,IAAA5C,CAAA,CAAA6C,KAAA,CAAAlD,CAAA,EAAAD,CAAA;AAAA,SAAAgD,0BAAA,cAAA/C,CAAA,IAAAmD,OAAA,CAAA1C,SAAA,CAAA2C,OAAA,CAAA3B,IAAA,CAAAuB,kBAAA,CAAAG,OAAA,iCAAAnD,CAAA,aAAA+C,yBAAA,YAAAA,0BAAA,aAAA/C,CAAA;AADA,OAAOqD,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,SAAS,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AAC7G,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AAC3C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,wBAAwB,EAAEC,qBAAqB,QAAQ,qCAAqC;AAAC,IAEhGC,UAAU,0BAAAC,UAAA;EAAA,SAAAD,WAAA;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,UAAA;IAAA,SAAAI,IAAA,GAAAC,SAAA,CAAAzD,MAAA,EAAA0D,IAAA,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IAAAN,KAAA,GAAAhC,UAAA,OAAA8B,UAAA,KAAAS,MAAA,CAAAH,IAAA;IAAAI,eAAA,CAAAR,KAAA,WACN;MACNS,gBAAgB,EAAElB,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC,IAAIb,qBAAqB,CAAC,CAAC,CAACc,OAAO;MAC3EC,aAAa,EAAEf,qBAAqB,CAAC,CAAC,CAACgB,IAAI;MAC3CC,oBAAoB,EAAEjB,qBAAqB,CAAC,CAAC,CAACkB,WAAW;MACzDC,UAAU,EAAEnB,qBAAqB,CAAC,CAAC,CAACoB,aAAa;MACjDC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,KAAK;MACdC,aAAa,EAAE,IAAI;MACnBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX,CAAC;IAAAjB,eAAA,CAAAR,KAAA,yBA4DqB,YAAM;MAC1B,IAAM0B,YAAY,GAAG7B,qBAAqB,CAAC,CAAC;MAC5C,IAAIlE,CAAC,GAAG,CAAC,CAAC;MACV,IAAMgG,KAAK,GAAGD,YAAY,CAACT,aAAa,CAACW,GAAG,CAAC,UAAAC,SAAS,EAAI;QACxDlG,CAAC,EAAE;QACH,OAAO;UACLmG,MAAM,EAAED,SAAS,CAAChB,IAAI;UACtBE,WAAW,EAAEc,SAAS,CAACE,QAAQ;UAC/BC,IAAI,EAAEH,SAAS,CAACI,GAAG;UACnBC,KAAK,eACHzD,KAAA,CAAA0D,aAAA,2BACE1D,KAAA,CAAA0D,aAAA,CAACpD,IAAI;YAAC8B,IAAI,EAAC;UAAW,CAAE,CAAC,EACxBgB,SAAS,CAACO,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAC,QACzB;QAET,CAAC;MACH,CAAC,CAAC;MACFrC,KAAA,CAAKsC,QAAQ,CAAC;QACZf,IAAI,EAAEI,KAAK;QACXL,aAAa,EAAE,IAAI;QACnBV,aAAa,EAAEc,YAAY,CAACb,IAAI;QAChCC,oBAAoB,EAAEY,YAAY,CAACX;MACrC,CAAC,CAAC;IACJ,CAAC;IAAAP,eAAA,CAAAR,KAAA,wBAEoB,YAAM;MACzB,IAAAuC,WAAA,GAAgDvC,KAAA,CAAKwC,KAAK;QAAlD5B,aAAa,GAAA2B,WAAA,CAAb3B,aAAa;QAAEE,oBAAoB,GAAAyB,WAAA,CAApBzB,oBAAoB;MAE3C,oBACErC,KAAA,CAAA0D,aAAA;QAAKM,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,YAAY,EAAE,IAAI;UAAEC,SAAS,EAAE;QAAK;MAAE,gBACvEnE,KAAA,CAAA0D,aAAA,CAACrD,MAAM;QAAC+D,EAAE,EAAC;MAAI,gBACbpE,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAc,CAAE,CAAC,eAC5BpC,KAAA,CAAA0D,aAAA,CAACrD,MAAM,CAACgE,OAAO,QACZlC,aAAa,eACdnC,KAAA,CAAA0D,aAAA,CAACrD,MAAM,CAACiE,SAAS,QAAEjC,oBAAuC,CAC5C,CACV,CACL,CAAC;IAEV,CAAC;IAAAN,eAAA,CAAAR,KAAA,iBAEa,YAAM;MAClB,IAAAgD,YAAA,GAAgChD,KAAA,CAAKwC,KAAK;QAAlCjB,IAAI,GAAAyB,YAAA,CAAJzB,IAAI;QAAED,aAAa,GAAA0B,YAAA,CAAb1B,aAAa;MAE3B,IAAIC,IAAI,CAAC7E,MAAM,KAAK,CAAC,EAAE;QACrB,oBACE+B,KAAA,CAAA0D,aAAA,CAAC/C,OAAO;UAAC6D,IAAI;QAAA,gBACXxE,KAAA,CAAA0D,aAAA,CAACpD,IAAI;UAAC8B,IAAI,EAAC;QAAa,CAAE,CAAC,oEAEpB,CAAC;MAEd;MAEA,oBACEpC,KAAA,CAAA0D,aAAA,cACGb,aAAa,iBACZ7C,KAAA,CAAA0D,aAAA,CAAC/C,OAAO;QAAC8D,OAAO;MAAA,gBACdzE,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAc,CAAE,CAAC,gDAErB,CACV,eACDpC,KAAA,CAAA0D,aAAA,CAAChD,IAAI,CAACgE,KAAK;QAACxB,KAAK,EAAEJ;MAAK,CAAE,CACvB,CAAC;IAEV,CAAC;IAAAf,eAAA,CAAAR,KAAA;MAAA,IAAAoD,IAAA,GAAAC,iBAAA,cAAA9F,YAAA,GAAAE,CAAA,CAEU,SAAA6F,QAAOC,KAAK;QAAA,IAAAC,YAAA,EAAAtC,SAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAE,aAAA,EAAAmC,QAAA,EAAAC,GAAA,EAAAC,QAAA,EAAAC,eAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAzG,YAAA,GAAAC,CAAA,WAAAyG,QAAA;UAAA,kBAAAA,QAAA,CAAA1I,CAAA;YAAA;cACrBgI,KAAK,CAACW,cAAc,CAAC,CAAC;cACtBlE,KAAA,CAAKsC,QAAQ,CAAC;gBAAEjB,OAAO,EAAE,IAAI;gBAAEG,KAAK,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAK,CAAC,CAAC;cAAC+B,YAAA,GAEDxD,KAAA,CAAKwC,KAAK,EAA9DtB,SAAS,GAAAsC,YAAA,CAATtC,SAAS,EAAEC,SAAS,GAAAqC,YAAA,CAATrC,SAAS,EAAEC,UAAU,GAAAoC,YAAA,CAAVpC,UAAU,EAAEE,aAAa,GAAAkC,YAAA,CAAblC,aAAa;cAAA,MAEnD,CAACJ,SAAS,IAAI,CAACC,SAAS,IAAI,CAACC,UAAU;gBAAA6C,QAAA,CAAA1I,CAAA;gBAAA;cAAA;cACzCyE,KAAA,CAAKsC,QAAQ,CAAC;gBACZd,KAAK,EAAE,2BAA2B;gBAClCH,OAAO,EAAE;cACX,CAAC,CAAC;cAAC,OAAA4C,QAAA,CAAA1H,CAAA;YAAA;cAAA,KAID+E,aAAa;gBAAA2C,QAAA,CAAA1I,CAAA;gBAAA;cAAA;cACf;cACA4I,UAAU,CAAC,YAAM;gBACf,IAAMC,YAAY,GAAG;kBACnBvD,IAAI,EAAEK,SAAS;kBACfa,QAAQ,EAAEZ,SAAS;kBACnBkD,KAAK,EAAEjD,UAAU;kBACjBgB,KAAK,EAAE,CAAC;kBACRH,GAAG,EAAE;gBACP,CAAC;;gBAED;gBACArC,wBAAwB,CAACwE,YAAY,CAAC;;gBAEtC;gBACA,IAAME,OAAO,GAAG;kBACdxC,MAAM,EAAEsC,YAAY,CAACvD,IAAI;kBACzBE,WAAW,EAAEqD,YAAY,CAACrC,QAAQ;kBAClCC,IAAI,EAAEoC,YAAY,CAACnC,GAAG;kBACtBC,KAAK,eACHzD,KAAA,CAAA0D,aAAA,2BACE1D,KAAA,CAAA0D,aAAA,CAACpD,IAAI;oBAAC8B,IAAI,EAAC;kBAAW,CAAE,CAAC,EACxBuD,YAAY,CAAChC,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAC,QAC5B;gBAET,CAAC;gBAEDrC,KAAA,CAAKsC,QAAQ,CAAC,UAAAiC,SAAS;kBAAA,OAAK;oBAC1BhD,IAAI,KAAAhB,MAAA,CAAAiE,kBAAA,CAAMD,SAAS,CAAChD,IAAI,IAAE+C,OAAO,EAAC;oBAClCjD,OAAO,EAAE,KAAK;oBACdI,OAAO,EAAE,mEAAmE;oBAC5EP,SAAS,EAAE,EAAE;oBACbC,SAAS,EAAE,EAAE;oBACbC,UAAU,EAAE;kBACd,CAAC;gBAAA,CAAC,CAAC;cACL,CAAC,EAAE,IAAI,CAAC;cAAC,OAAA6C,QAAA,CAAA1H,CAAA;YAAA;cAAA0H,QAAA,CAAA9H,CAAA;cAAA8H,QAAA,CAAA1I,CAAA;cAAA,OAMc+D,IAAI,CAACmF,GAAG,CAACC,WAAW,CAAC,CAAC;YAAA;cAAvCjB,QAAQ,GAAAQ,QAAA,CAAA3H,CAAA;cACRoH,GAAG,GAAGnE,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC;cAC5BiD,QAAQ,GAAGjE,QAAQ,CAACgE,GAAG,CAAC,EAE9B;cACME,eAAe,GAAG,iDAAiD,EAEzE;cAAAK,QAAA,CAAA1I,CAAA;cAAA,OACMoI,QAAQ,CAACgB,OAAO,CAACC,YAAY,CACjC1D,SAAS,EACTC,SAAS,EACTyC,eAAe,EACfxC,UACF,CAAC,CAACyD,IAAI,CAAC;gBACLC,IAAI,EAAErB,QAAQ,CAAC,CAAC,CAAC;gBACjBsB,GAAG,EAAE;cACP,CAAC,CAAC;YAAA;cAAAd,QAAA,CAAA9H,CAAA;cAAA8H,QAAA,CAAA1I,CAAA;cAAA,OAIuByJ,KAAK,CAAC,8BAA8B,EAAE;gBAC3DC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,IAAI,WAAA5E,MAAA,CAAW6E,kBAAkB,CAAChE,UAAU,CAAC,qBAAAb,MAAA,CAAkB6E,kBAAkB,CAACpF,KAAA,CAAKwC,KAAK,CAAC5B,aAAa,CAAC;cAC7G,CAAC,CAAC;YAAA;cANIiD,QAAQ,GAAAI,QAAA,CAAA3H,CAAA;cAAA2H,QAAA,CAAA1I,CAAA;cAAA,OAQasI,QAAQ,CAACwB,IAAI,CAAC,CAAC;YAAA;cAApCvB,YAAY,GAAAG,QAAA,CAAA3H,CAAA;cAAA,MAEdwH,YAAY,CAACwB,MAAM,KAAK,SAAS;gBAAArB,QAAA,CAAA1I,CAAA;gBAAA;cAAA;cACnCyE,KAAA,CAAKsC,QAAQ,CAAC;gBACZb,OAAO,EAAE,0DAA0D;gBACnEJ,OAAO,EAAE,KAAK;gBACdH,SAAS,EAAE,EAAE;gBACbC,SAAS,EAAE,EAAE;gBACbC,UAAU,EAAE;cACd,CAAC,CAAC;;cAEF;cACApB,KAAA,CAAKuF,iBAAiB,CAAC,CAAC;cAACtB,QAAA,CAAA1I,CAAA;cAAA;YAAA;cAAA,MAEnB,IAAIiK,KAAK,CAAC1B,YAAY,CAAC2B,OAAO,IAAI,0CAA0C,CAAC;YAAA;cAAAxB,QAAA,CAAA1I,CAAA;cAAA;YAAA;cAAA0I,QAAA,CAAA9H,CAAA;cAAA4H,EAAA,GAAAE,QAAA,CAAA3H,CAAA;cAGrFoJ,OAAO,CAAClE,KAAK,CAAC,iBAAiB,EAAAuC,EAAS,CAAC;cACzC/D,KAAA,CAAKsC,QAAQ,CAAC;gBACZd,KAAK,EAAE,oEAAoE,GAAGuC,EAAA,CAAQ0B,OAAO;gBAC7FpE,OAAO,EAAE;cACX,CAAC,CAAC;YAAC;cAAA4C,QAAA,CAAA1I,CAAA;cAAA;YAAA;cAAA0I,QAAA,CAAA9H,CAAA;cAAA6H,GAAA,GAAAC,QAAA,CAAA3H,CAAA;cAILoJ,OAAO,CAAClE,KAAK,CAAC,yBAAyB,EAAAwC,GAAK,CAAC;cAC7ChE,KAAA,CAAKsC,QAAQ,CAAC;gBACZd,KAAK,EAAE,2BAA2B,GAAGwC,GAAA,CAAIyB,OAAO;gBAChDpE,OAAO,EAAE;cACX,CAAC,CAAC;YAAC;cAAA,OAAA4C,QAAA,CAAA1H,CAAA;UAAA;QAAA,GAAA+G,OAAA;MAAA,CAEN;MAAA,iBAAAqC,EAAA;QAAA,OAAAvC,IAAA,CAAA9E,KAAA,OAAA6B,SAAA;MAAA;IAAA;IAAAK,eAAA,CAAAR,KAAA,2BAEuB;MAAA,oBACtBvB,KAAA,CAAA0D,aAAA,CAAClD,OAAO,CAAC2G,QAAQ,qBACfnH,KAAA,CAAA0D,aAAA,CAAClD,OAAO;QAAC4D,EAAE,EAAE7D,IAAK;QAAC6G,SAAS,EAAC,SAAS;QAACC,IAAI,EAAC,SAAS;QAACC,QAAQ;QAACC,QAAQ;QAACC,OAAO;QAACC,KAAK,EAAC,MAAM;QAACzD,KAAK,EAAE;UAAE0D,eAAe,EAAE,OAAO;UAAEC,WAAW,EAAE;QAAO;MAAE,gBACpJ3H,KAAA,CAAA0D,aAAA,CAACnD,IAAI,CAACqH,IAAI;QAACxD,EAAE,EAAC,GAAG;QAACJ,KAAK,EAAE;UAAE6D,KAAK,EAAE;QAAO;MAAE,gBACzC7H,KAAA,CAAA0D,aAAA,aAAI,MAAQ,CAAC,eAAA1D,KAAA,CAAA0D,aAAA,WAAK,CACT,CAAC,eACZ1D,KAAA,CAAA0D,aAAA,CAAC3C,IAAI;QAAC+G,KAAK,eAAAhG,MAAA,CAAehB,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC;MAAqB,gBACnEjC,KAAA,CAAA0D,aAAA,yBACE1D,KAAA,CAAA0D,aAAA,CAACnD,IAAI,CAACqH,IAAI;QAAC5D,KAAK,EAAE;UAAE6D,KAAK,EAAE;QAAO;MAAE,gBAClC7H,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAW,CAAE,CAAC,aAEhB,CACV,CACC,CAAC,eACPpC,KAAA,CAAA0D,aAAA,CAAC3C,IAAI;QAAC+G,KAAK,eAAAhG,MAAA,CAAehB,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC;MAAkB,gBAChEjC,KAAA,CAAA0D,aAAA,yBACE1D,KAAA,CAAA0D,aAAA,CAACnD,IAAI,CAACqH,IAAI;QAACxD,EAAE,EAAC,GAAG;QAACJ,KAAK,EAAE;UAAE6D,KAAK,EAAE;QAAO;MAAE,gBACzC7H,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAc,CAAE,CAAC,kBAEnB,CACV,CACC,CAAC,eACPpC,KAAA,CAAA0D,aAAA,CAAC3C,IAAI;QAAC+G,KAAK,eAAAhG,MAAA,CAAehB,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC;MAAe,gBAC7DjC,KAAA,CAAA0D,aAAA,yBACE1D,KAAA,CAAA0D,aAAA,CAACnD,IAAI,CAACqH,IAAI;QAACxD,EAAE,EAAC,GAAG;QAACJ,KAAK,EAAE;UAAE6D,KAAK,EAAE;QAAO;MAAE,gBACzC7H,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAM,CAAE,CAAC,cAEX,CACV,CACC,CAAC,eACPpC,KAAA,CAAA0D,aAAA,WAAK,CAAC,eACN1D,KAAA,CAAA0D,aAAA,CAACvD,MAAM;QAAC4H,OAAO,EAAExG,KAAA,CAAKyG,OAAQ;QAAChE,KAAK,EAAE;UAAE0D,eAAe,EAAE;QAAQ;MAAE,gBACjE1H,KAAA,CAAA0D,aAAA,CAACnD,IAAI,CAACqH,IAAI;QAACxD,EAAE,EAAC,GAAG;QAACJ,KAAK,EAAE;UAAE6D,KAAK,EAAE;QAAO;MAAE,gBACzC7H,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAU,CAAE,CAAC,YAEf,CACL,CACD,CACO,CAAC;IAAA,CACpB;IAAAL,eAAA,CAAAR,KAAA,aAES,YAAM;MACdT,OAAO,CAACmH,MAAM,CAAC,SAAS,CAAC;MACzBnH,OAAO,CAACmH,MAAM,CAAC,eAAe,CAAC;MAC/BnH,OAAO,CAACmH,MAAM,CAAC,YAAY,CAAC;MAC5BC,KAAK,CAAC,cAAc,CAAC;MACrBlH,MAAM,CAACmH,SAAS,CAAC,WAAW,CAAC;IAC/B,CAAC;IAAA,OAAA5G,KAAA;EAAA;EAAA6G,SAAA,CAAA/G,UAAA,EAAAC,UAAA;EAAA,OAAA+G,YAAA,CAAAhH,UAAA;IAAAiH,GAAA;IAAAhK,KAAA;MAAA,IAAAiK,kBAAA,GAAA3D,iBAAA,cAAA9F,YAAA,GAAAE,CAAA,CA/RD,SAAAwJ,SAAA;QAAA,IAAAvD,GAAA,EAAAC,QAAA,EAAAuD,OAAA,EAAAtL,CAAA,EAAAoF,UAAA,EAAAmG,EAAA,EAAAtF,SAAA,EAAAlG,CAAA,EAAAgG,KAAA,EAAAyF,GAAA;QAAA,OAAA7J,YAAA,GAAAC,CAAA,WAAA6J,SAAA;UAAA,kBAAAA,SAAA,CAAA9L,CAAA;YAAA;cACE;cACA,IAAI,CAACgE,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC,EAAE;gBAC3BnB,OAAO,CAAC+H,GAAG,CAAC,SAAS,EAAEzH,qBAAqB,CAAC,CAAC,CAACc,OAAO,CAAC;cACzD;cAAC0G,SAAA,CAAAlL,CAAA;cAGC;cACMuH,GAAG,GAAGnE,OAAO,CAACmB,GAAG,CAAC,SAAS,CAAC;cAC5BiD,QAAQ,GAAGjE,QAAQ,CAACgE,GAAG,CAAC;cAAA2D,SAAA,CAAA9L,CAAA;cAAA,OACRoI,QAAQ,CAACgB,OAAO,CAAC4C,kBAAkB,CAAC,CAAC,CAAC1K,IAAI,CAAC,CAAC;YAAA;cAA5DqK,OAAO,GAAAG,SAAA,CAAA/K,CAAA;cAEb,IAAI,CAACgG,QAAQ,CAAC;gBACZ1B,aAAa,EAAEsG,OAAO,CAAC,CAAC,CAAC;gBACzBpG,oBAAoB,EAAEoG,OAAO,CAAC,CAAC,CAAC;gBAChC5F,aAAa,EAAE;cACjB,CAAC,CAAC;cAAC+F,SAAA,CAAA9L,CAAA;cAAA,OAEaoI,QAAQ,CAACgB,OAAO,CAAC6C,kBAAkB,CAAC,CAAC,CAAC3K,IAAI,CAAC,CAAC;YAAA;cAAtDjB,CAAC,GAAAyL,SAAA,CAAA/K,CAAA;cAAA,MAEHV,CAAC,IAAI,CAAC;gBAAAyL,SAAA,CAAA9L,CAAA;gBAAA;cAAA;cACRmK,OAAO,CAAC+B,GAAG,CAAC,sDAAsD,CAAC;cACnE,IAAI,CAACC,mBAAmB,CAAC,CAAC;cAAC,OAAAL,SAAA,CAAA9K,CAAA;YAAA;cAIzByE,UAAU,GAAG,EAAE;cACVrF,EAAC,GAAG,CAAC;YAAA;cAAA,MAAEA,EAAC,GAAGC,CAAC;gBAAAyL,SAAA,CAAA9L,CAAA;gBAAA;cAAA;cAAA8L,SAAA,CAAA9L,CAAA;cAAA,OACKoI,QAAQ,CAACgB,OAAO,CAACgD,YAAY,CAAChM,EAAC,CAAC,CAACkB,IAAI,CAAC,CAAC;YAAA;cAAzDgF,SAAS,GAAAwF,SAAA,CAAA/K,CAAA;cACf0E,UAAU,CAAC4G,IAAI,CAAC/F,SAAS,CAAC;YAAC;cAFNlG,EAAC,EAAE;cAAA0L,SAAA,CAAA9L,CAAA;cAAA;YAAA;cAKtBI,CAAC,GAAG,CAAC,CAAC;cACJgG,KAAK,GAAGX,UAAU,CAACY,GAAG,CAAC,UAAAC,SAAS,EAAI;gBACxClG,CAAC,EAAE;gBACH,OAAO;kBACLmG,MAAM,EAAED,SAAS,CAAC,CAAC,CAAC;kBACpBd,WAAW,EAAEc,SAAS,CAAC,CAAC,CAAC;kBACzBG,IAAI,EAAEH,SAAS,CAAC,CAAC,CAAC,IAAI,0BAA0B;kBAChDK,KAAK,eACHzD,KAAA,CAAA0D,aAAA,2BACE1D,KAAA,CAAA0D,aAAA,CAACpD,IAAI;oBAAC8B,IAAI,EAAC;kBAAW,CAAE,CAAC,EACxBgB,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,CAACQ,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAC,QAC3C;gBAET,CAAC;cACH,CAAC,CAAC;cAEF,IAAI,CAACC,QAAQ,CAAC;gBACZf,IAAI,EAAEI,KAAK;gBACXL,aAAa,EAAE;cACjB,CAAC,CAAC;cAAC+F,SAAA,CAAA9L,CAAA;cAAA;YAAA;cAAA8L,SAAA,CAAAlL,CAAA;cAAAiL,GAAA,GAAAC,SAAA,CAAA/K,CAAA;cAEHoJ,OAAO,CAAC+B,GAAG,CAAC,iCAAiC,EAAEL,GAAA,CAAI3B,OAAO,CAAC;cAC3D,IAAI,CAACiC,mBAAmB,CAAC,CAAC;YAAC;cAAA,OAAAL,SAAA,CAAA9K,CAAA;UAAA;QAAA,GAAA0K,QAAA;MAAA,CAE9B;MAAA,SAxDK1B,iBAAiBA,CAAA;QAAA,OAAAyB,kBAAA,CAAA1I,KAAA,OAAA6B,SAAA;MAAA;MAAA,OAAjBoF,iBAAiB;IAAA;EAAA;IAAAwB,GAAA;IAAAhK,KAAA,EAiSvB,SAAA8K,MAAMA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACP,IAAAC,YAAA,GAAqF,IAAI,CAACvF,KAAK;QAAvFnB,OAAO,GAAA0G,YAAA,CAAP1G,OAAO;QAAEG,KAAK,GAAAuG,YAAA,CAALvG,KAAK;QAAEC,OAAO,GAAAsG,YAAA,CAAPtG,OAAO;QAAEP,SAAS,GAAA6G,YAAA,CAAT7G,SAAS;QAAEC,SAAS,GAAA4G,YAAA,CAAT5G,SAAS;QAAEC,UAAU,GAAA2G,YAAA,CAAV3G,UAAU;QAAEE,aAAa,GAAAyG,YAAA,CAAbzG,aAAa;MAEhF,oBACE7C,KAAA,CAAA0D,aAAA,2BACE1D,KAAA,CAAA0D,aAAA,CAACxC,MAAM,qBACLlB,KAAA,CAAA0D,aAAA,gBAAO,iBAAsB,CAAC,eAC9B1D,KAAA,CAAA0D,aAAA;QAAM6F,GAAG,EAAC,eAAe;QAACC,IAAI,EAAC,cAAc;QAACC,IAAI,EAAC;MAA6B,CAAE,CAC5E,CAAC,eACTzJ,KAAA,CAAA0D,aAAA,CAACxD,IAAI,qBACHF,KAAA,CAAA0D,aAAA,CAACxD,IAAI,CAACwJ,GAAG,qBACP1J,KAAA,CAAA0D,aAAA,CAACxD,IAAI,CAACyJ,MAAM;QAAClC,KAAK,EAAE;MAAE,GACnB,IAAI,CAACmC,qBAAqB,CAAC,CACjB,CAAC,eACd5J,KAAA,CAAA0D,aAAA,CAACxD,IAAI,CAACyJ,MAAM;QAAClC,KAAK,EAAE;MAAG,gBACrBzH,KAAA,CAAA0D,aAAA,CAAC9C,MAAM,QACJ,IAAI,CAACkI,kBAAkB,CAAC,CAAC,eAC1B9I,KAAA,CAAA0D,aAAA,WAAK,CAAC,eACN1D,KAAA,CAAA0D,aAAA,CAACxD,IAAI,qBACHF,KAAA,CAAA0D,aAAA,CAACxD,IAAI,CAACwJ,GAAG,qBACP1J,KAAA,CAAA0D,aAAA,CAACxD,IAAI,CAACyJ,MAAM;QAAClC,KAAK,EAAE;MAAG,gBACrBzH,KAAA,CAAA0D,aAAA,CAACrD,MAAM;QAAC+D,EAAE,EAAC,IAAI;QAACyD,KAAK,EAAC;MAAO,GAAC,gBAEtB,CAAC,eACT7H,KAAA,CAAA0D,aAAA,CAACjD,SAAS,QACP,IAAI,CAACoJ,WAAW,CAAC,CACT,CACA,CAAC,eACd7J,KAAA,CAAA0D,aAAA,CAACxD,IAAI,CAACyJ,MAAM;QAAClC,KAAK,EAAE;MAAE,gBACpBzH,KAAA,CAAA0D,aAAA,CAACrD,MAAM;QAAC+D,EAAE,EAAC,IAAI;QAACyD,KAAK,EAAC,OAAO;QAAC5D,SAAS,EAAC;MAAQ,GAAC,eAEzC,CAAC,eACTjE,KAAA,CAAA0D,aAAA,CAAChD,IAAI;QAACoJ,KAAK;MAAA,gBACT9J,KAAA,CAAA0D,aAAA,CAAChD,IAAI,CAAC2D,OAAO,QACVtB,KAAK,iBACJ/C,KAAA,CAAA0D,aAAA,CAAC/C,OAAO;QAACoJ,QAAQ;MAAA,gBACf/J,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAoB,CAAE,CAAC,EACjCW,KACM,CACV,EACAC,OAAO,iBACNhD,KAAA,CAAA0D,aAAA,CAAC/C,OAAO;QAACqJ,QAAQ;MAAA,gBACfhK,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAc,CAAE,CAAC,EAC3BY,OACM,CACV,eACDhD,KAAA,CAAA0D,aAAA,CAACtD,IAAI;QAAC6J,QAAQ,EAAE,IAAI,CAACA;MAAS,gBAC5BjK,KAAA,CAAA0D,aAAA,CAACtD,IAAI,CAAC8J,KAAK;QACTJ,KAAK;QACLK,KAAK,EAAC,MAAM;QACZC,WAAW,EAAC,sBAAsB;QAClC9L,KAAK,EAAEmE,SAAU;QACjB4H,QAAQ,EAAE,SAAVA,QAAQA,CAAEvF,KAAK;UAAA,OAAIuE,MAAI,CAACxF,QAAQ,CAAC;YAAEpB,SAAS,EAAEqC,KAAK,CAACwF,MAAM,CAAChM;UAAM,CAAC,CAAC;QAAA,CAAC;QACpEiM,QAAQ;MAAA,CACT,CAAC,eACFvK,KAAA,CAAA0D,aAAA,CAACtD,IAAI,CAACoK,QAAQ;QACZL,KAAK,EAAC,aAAa;QACnBC,WAAW,EAAC,gCAAgC;QAC5C9L,KAAK,EAAEoE,SAAU;QACjB2H,QAAQ,EAAE,SAAVA,QAAQA,CAAEvF,KAAK;UAAA,OAAIuE,MAAI,CAACxF,QAAQ,CAAC;YAAEnB,SAAS,EAAEoC,KAAK,CAACwF,MAAM,CAAChM;UAAM,CAAC,CAAC;QAAA,CAAC;QACpEiM,QAAQ;MAAA,CACT,CAAC,eACFvK,KAAA,CAAA0D,aAAA,CAACtD,IAAI,CAAC8J,KAAK;QACTJ,KAAK;QACLK,KAAK,EAAC,OAAO;QACbX,IAAI,EAAC,OAAO;QACZY,WAAW,EAAC,uBAAuB;QACnC9L,KAAK,EAAEqE,UAAW;QAClB0H,QAAQ,EAAE,SAAVA,QAAQA,CAAEvF,KAAK;UAAA,OAAIuE,MAAI,CAACxF,QAAQ,CAAC;YAAElB,UAAU,EAAEmC,KAAK,CAACwF,MAAM,CAAChM;UAAM,CAAC,CAAC;QAAA,CAAC;QACrEiM,QAAQ;MAAA,CACT,CAAC,eACFvK,KAAA,CAAA0D,aAAA,CAACvD,MAAM;QACLsK,OAAO;QACPX,KAAK;QACLlH,OAAO,EAAEA,OAAQ;QACjB8H,QAAQ,EAAE9H,OAAQ;QAClBoB,KAAK,EAAE;UAAEG,SAAS,EAAE;QAAO;MAAE,GAE5BtB,aAAa,GAAG,oBAAoB,GAAG,oBAClC,CAAC,EACRA,aAAa,iBACZ7C,KAAA,CAAA0D,aAAA,CAAC/C,OAAO;QAAC6D,IAAI;QAACmG,IAAI,EAAC,OAAO;QAAC3G,KAAK,EAAE;UAAEG,SAAS,EAAE;QAAO;MAAE,gBACtDnE,KAAA,CAAA0D,aAAA,CAACpD,IAAI;QAAC8B,IAAI,EAAC;MAAa,CAAE,CAAC,4CAEpB,CAEP,CACM,CACV,CACK,CACL,CACN,CACA,CACG,CACL,CACN,CACH,CAAC;IAEV;EAAC;AAAA,EAnZsBnC,SAAS;AAsZlC,eAAeoB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}