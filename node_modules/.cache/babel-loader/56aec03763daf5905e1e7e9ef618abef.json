{"ast":null,"code":"import Web3 from 'web3';\nvar web3;\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n  // Modern dapp browsers\n  web3 = new Web3(window.ethereum);\n  try {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } catch (error) {\n    console.error(\"User denied account access\");\n  }\n} else {\n  console.log(\"WEBS ELSE FALLING*********************************************\");\n  // Fallback for local development\n  var provider = new Web3.providers.HttpProvider('http://localhost:7545');\n  web3 = new Web3(provider);\n}\nexport default web3;","map":{"version":3,"names":["Web3","web3","window","ethereum","request","method","error","console","log","provider","providers","HttpProvider"],"sources":["C:/Users/Sathyajothi/Desktop/BlockChainVoting/Ethereum/web3.js"],"sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n\t// Modern dapp browsers\r\n\tweb3 = new Web3(window.ethereum);\r\n\ttry {\r\n\t\tawait window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\t} catch (error) {\r\n\t\tconsole.error(\"User denied account access\");\r\n\t}\r\n} else {\r\n\tconsole.log(\"WEBS ELSE FALLING*********************************************\")\r\n\t// Fallback for local development\r\n\tconst provider = new Web3.providers.HttpProvider('http://localhost:7545');\r\n\tweb3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,IAAIC,IAAI;AAER,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;EAC5E;EACAF,IAAI,GAAG,IAAID,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC;EAChC,IAAI;IACH,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;EAC5C;AACD,CAAC,MAAM;EACNC,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;EAC7E;EACA,IAAMC,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC;EACzEV,IAAI,GAAG,IAAID,IAAI,CAACS,QAAQ,CAAC;AAC1B;AAEA,eAAeR,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}