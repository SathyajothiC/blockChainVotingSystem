{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Symbol$iterator from \"@babel/runtime-corejs2/core-js/symbol/iterator\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof _Symbol ? _Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = _Object$create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = _Object$getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(c); function f(e) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = _Object$create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = _Object$defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof _Symbol && r[_Symbol$iterator] || r[\"@@iterator\"]; if (!t) { if (_Array$isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? _Array$from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? _Reflect$construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport { Grid, Header, Button, Form, Input, Icon, Menu, Modal, Sidebar, Container, Card, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Cookies from 'js-cookie';\nimport { Link, Router } from '../../routes';\nimport Election from '../../Ethereum/election';\nimport { Helmet } from 'react-helmet';\n\n// Hardcoded sample election data\nvar SAMPLE_ELECTION = {\n  address: '0xa579675518D32c99B6f1929AFe8397d42D896f84',\n  name: 'Annual Board Election',\n  description: 'Election for Board of Directors 2023',\n  adminEmail: 'company@example.com',\n  voters: 150,\n  candidates: 5,\n  totalVotes: 120,\n  candidateData: [{\n    email: 'john.doe@company.com',\n    name: 'John Doe',\n    position: 'CEO',\n    votes: 45,\n    bio: 'Experienced leader with 10+ years in industry',\n    imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\n  }, {\n    email: 'jane.smith@company.com',\n    name: 'Jane Smith',\n    position: 'CTO',\n    votes: 38,\n    bio: 'Technology innovator and strategic thinker',\n    imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\n  }, {\n    email: 'robert.johnson@company.com',\n    name: 'Robert Johnson',\n    position: 'CFO',\n    votes: 22,\n    bio: 'Financial expert with proven track record',\n    imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\n  }, {\n    email: 'sarah.williams@company.com',\n    name: 'Sarah Williams',\n    position: 'COO',\n    votes: 10,\n    bio: 'Operations specialist focused on efficiency',\n    imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\n  }, {\n    email: 'michael.brown@company.com',\n    name: 'Michael Brown',\n    position: 'CMO',\n    votes: 5,\n    bio: 'Marketing guru with creative vision',\n    imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\n  }],\n  voterData: [{\n    id: 1,\n    email: 'voter1@company.com',\n    hasVoted: true\n  }, {\n    id: 2,\n    email: 'voter2@company.com',\n    hasVoted: true\n  }, {\n    id: 3,\n    email: 'voter3@company.com',\n    hasVoted: false\n  }, {\n    id: 4,\n    email: 'voter4@company.com',\n    hasVoted: true\n  }, {\n    id: 5,\n    email: 'voter5@company.com',\n    hasVoted: false\n  }],\n  electionStatus: 'active',\n  startDate: '2023-10-01',\n  endDate: '2023-10-15'\n};\nvar VotingList = /*#__PURE__*/function (_Component) {\n  function VotingList() {\n    var _this;\n    _classCallCheck(this, VotingList);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, VotingList, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      election_address: Cookies.get('address') || SAMPLE_ELECTION.address,\n      election_name: SAMPLE_ELECTION.name,\n      election_description: SAMPLE_ELECTION.description,\n      emailArr: [],\n      idArr: [],\n      item: [],\n      useSampleData: true,\n      nextVoterId: 6,\n      // Starting ID for new voters\n      emailError: '' // For duplicate email validation\n    });\n    _defineProperty(_this, \"setSampleVoterData\", function () {\n      var email = SAMPLE_ELECTION.voterData.map(function (voter) {\n        return voter.email;\n      });\n      var id = SAMPLE_ELECTION.voterData.map(function (voter) {\n        return voter.id;\n      });\n      _this.setState({\n        emailArr: email,\n        idArr: id,\n        useSampleData: true\n      });\n      _this.createVoterItems(email, id);\n    });\n    _defineProperty(_this, \"createVoterItems\", function (emailArr, idArr) {\n      var i = -1;\n      var items = idArr.map(function (id) {\n        i++;\n        return {\n          header: emailArr[i],\n          description: /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Modal, {\n            size: \"tiny\",\n            trigger: /*#__PURE__*/React.createElement(Button, {\n              basic: true,\n              id: id,\n              color: \"green\"\n            }, \"Edit\"),\n            closeIcon: true,\n            onOpen: function onOpen() {\n              return _this.handleModalOpen(id, emailArr[i]);\n            }\n          }, /*#__PURE__*/React.createElement(Modal.Header, null, \"Edit E-mail ID\"), /*#__PURE__*/React.createElement(\"center\", null, /*#__PURE__*/React.createElement(Modal.Content, null, /*#__PURE__*/React.createElement(Input, {\n            id: \"EmailVal\".concat(id),\n            placeholder: \"E-mail ID\",\n            defaultValue: emailArr[i],\n            style: {\n              marginBottom: '5%',\n              marginTop: '5%'\n            },\n            onChange: function onChange() {\n              return _this.validateEmail(id);\n            }\n          }), _this.state.emailError && /*#__PURE__*/React.createElement(Message, {\n            negative: true,\n            size: \"tiny\",\n            style: {\n              marginTop: '10px'\n            }\n          }, _this.state.emailError)), /*#__PURE__*/React.createElement(Modal.Actions, null, /*#__PURE__*/React.createElement(Button, {\n            positive: true,\n            icon: \"checkmark\",\n            labelPosition: \"right\",\n            content: \"Yes\",\n            padding: \"30\",\n            style: {\n              marginBottom: \"10px\"\n            },\n            onClick: _this.updateEmail,\n            id: id,\n            disabled: !!_this.state.emailError\n          }), /*#__PURE__*/React.createElement(Button, {\n            negative: true\n          }, \"No\")))), /*#__PURE__*/React.createElement(Button, {\n            negative: true,\n            basic: true,\n            id: id,\n            value: id,\n            onClick: _this.deleteEmail,\n            style: {\n              marginLeft: '10px'\n            }\n          }, \"Delete\"))\n        };\n      });\n      _this.setState({\n        item: items\n      });\n    });\n    _defineProperty(_this, \"validateEmail\", function (voterId) {\n      var newEmail = document.getElementById(\"EmailVal\".concat(voterId)).value;\n      var currentEmails = _this.state.emailArr.filter(function (email, index) {\n        return _this.state.idArr[index] !== _parseInt(voterId);\n      });\n      if (currentEmails.includes(newEmail)) {\n        _this.setState({\n          emailError: 'This email is already registered to another voter.'\n        });\n        return false;\n      }\n      if (!newEmail.includes('@')) {\n        _this.setState({\n          emailError: 'Please enter a valid email address.'\n        });\n        return false;\n      }\n      _this.setState({\n        emailError: ''\n      });\n      return true;\n    });\n    _defineProperty(_this, \"handleModalOpen\", function (voterId, currentEmail) {\n      // Clear any previous error when modal opens\n      _this.setState({\n        emailError: ''\n      });\n\n      // Set the current email as the default value\n      setTimeout(function () {\n        var inputField = document.getElementById(\"EmailVal\".concat(voterId));\n        if (inputField) {\n          inputField.value = currentEmail;\n        }\n      }, 100);\n    });\n    _defineProperty(_this, \"updateEmail\", function (event) {\n      var voterId = event.currentTarget.id;\n\n      // Validate email before proceeding\n      if (!_this.validateEmail(voterId)) {\n        return;\n      }\n      if (_this.state.useSampleData) {\n        var newEmail = document.getElementById(\"EmailVal\".concat(voterId)).value;\n\n        // Update the email in the state\n        var updatedEmailArr = _toConsumableArray(_this.state.emailArr);\n        var voterIndex = _this.state.idArr.indexOf(_parseInt(voterId));\n        if (voterIndex !== -1) {\n          updatedEmailArr[voterIndex] = newEmail;\n          _this.setState({\n            emailArr: updatedEmailArr,\n            emailError: '' // Clear error after successful update\n          });\n          _this.createVoterItems(updatedEmailArr, _this.state.idArr);\n          alert(\"Voter email updated to: \".concat(newEmail));\n        }\n        return;\n      }\n      var st = 'EmailVal' + event.currentTarget.id;\n      var a = document.getElementById(st).value;\n      var b = _this.state.election_name;\n      var c = _this.state.election_description;\n      var http = new XMLHttpRequest();\n      var url = '/voter/' + voterId;\n      var params = 'email=' + a + '&election_name=' + b + '&election_description=' + c;\n      http.open(\"PUT\", url, true);\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n      http.onreadystatechange = function () {\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message);\n          }\n        }\n      };\n      http.send(params);\n    });\n    _defineProperty(_this, \"deleteEmail\", function (event) {\n      if (_this.state.useSampleData) {\n        var voterId = _parseInt(event.currentTarget.value);\n\n        // Remove the voter from the state\n        var voterIndex = _this.state.idArr.indexOf(voterId);\n        if (voterIndex !== -1) {\n          var updatedEmailArr = _toConsumableArray(_this.state.emailArr);\n          var updatedIdArr = _toConsumableArray(_this.state.idArr);\n          updatedEmailArr.splice(voterIndex, 1);\n          updatedIdArr.splice(voterIndex, 1);\n          _this.setState({\n            emailArr: updatedEmailArr,\n            idArr: updatedIdArr\n          });\n          _this.createVoterItems(updatedEmailArr, updatedIdArr);\n          alert(\"Voter with ID \".concat(voterId, \" has been removed\"));\n        }\n        return;\n      }\n      var http = new XMLHttpRequest();\n      var url = '/voter/' + event.currentTarget.value;\n      http.open(\"DELETE\", url, true);\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n      http.onreadystatechange = function () {\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message);\n          }\n        }\n      };\n      http.send();\n    });\n    _defineProperty(_this, \"register\", function (event) {\n      var email = document.getElementById('register_voter_email').value;\n      if (!email || !email.includes('@')) {\n        alert(\"Please enter a valid email address\");\n        return;\n      }\n\n      // Check for duplicate email\n      if (_this.state.emailArr.includes(email)) {\n        alert(\"This email is already registered to another voter.\");\n        return;\n      }\n      if (_this.state.useSampleData) {\n        // Add new voter to sample data\n        var newVoterId = _this.state.nextVoterId;\n        var updatedEmailArr = [].concat(_toConsumableArray(_this.state.emailArr), [email]);\n        var updatedIdArr = [].concat(_toConsumableArray(_this.state.idArr), [newVoterId]);\n        _this.setState({\n          emailArr: updatedEmailArr,\n          idArr: updatedIdArr,\n          nextVoterId: newVoterId + 1\n        });\n        _this.createVoterItems(updatedEmailArr, updatedIdArr);\n        alert(\"Voter \".concat(email, \" has been added with ID \").concat(newVoterId));\n\n        // Clear the input field\n        document.getElementById('register_voter_email').value = '';\n        return;\n      }\n      var http = new XMLHttpRequest();\n      var url = \"/voter/register\";\n      var params = \"email=\" + email + \"&election_address=\" + _this.state.election_address + \"&election_name=\" + _this.state.election_name + \"&election_description=\" + _this.state.election_description;\n      http.open(\"POST\", url, true);\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n      http.onreadystatechange = function () {\n        if (http.readyState == 4 && http.status == 200) {\n          var responseObj = JSON.parse(http.responseText);\n          if (responseObj.status == \"success\") {\n            alert(responseObj.message);\n          } else {\n            alert(responseObj.message);\n          }\n        }\n      };\n      http.send(params);\n    });\n    _defineProperty(_this, \"renderTable\", function () {\n      if (_this.state.item.length === 0) {\n        return /*#__PURE__*/React.createElement(Message, {\n          info: true\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"info circle\"\n        }), \"No voters registered yet. Add voters using the form on the right.\");\n      }\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Card.Group, {\n        items: _this.state.item\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", null, \"Total Voters: \", _this.state.emailArr.length)));\n    });\n    _defineProperty(_this, \"SidebarExampleVisible\", function () {\n      return /*#__PURE__*/React.createElement(Sidebar.Pushable, null, /*#__PURE__*/React.createElement(Sidebar, {\n        as: Menu,\n        animation: \"overlay\",\n        icon: \"labeled\",\n        inverted: true,\n        vertical: true,\n        visible: true,\n        width: \"thin\",\n        style: {\n          backgroundColor: 'white',\n          borderWidth: \"10px\"\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"MENU\"), /*#__PURE__*/React.createElement(\"hr\", null)), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(Cookies.get('address'), \"/company_dashboard\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        style: {\n          color: 'grey',\n          fontColor: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"dashboard\"\n      }), \"Dashboard\"))), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(Cookies.get('address'), \"/candidate_list\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"user outline\"\n      }), \"Candidate List\"))), /*#__PURE__*/React.createElement(Link, {\n        route: \"/election/\".concat(Cookies.get('address'), \"/voting_list\")\n      }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"list\"\n      }), \"Voter List\"))), /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(Button, {\n        onClick: _this.signOut,\n        style: {\n          backgroundColor: 'white'\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        style: {\n          color: 'grey'\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"sign out\"\n      }), \"Sign Out\"))));\n    });\n    _defineProperty(_this, \"signOut\", function () {\n      Cookies.remove('address');\n      Cookies.remove('company_email');\n      Cookies.remove('company_id');\n      alert(\"Logging out.\");\n      Router.pushRoute('/homepage');\n    });\n    _defineProperty(_this, \"getElectionDetails\", function () {\n      var _this$state = _this.state,\n        election_name = _this$state.election_name,\n        election_description = _this$state.election_description;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: '45%',\n          marginBottom: '2%',\n          marginTop: '2%'\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"address card\"\n      }), /*#__PURE__*/React.createElement(Header.Content, null, election_name, /*#__PURE__*/React.createElement(Header.Subheader, null, election_description))));\n    });\n    return _this;\n  }\n  _inherits(VotingList, _Component);\n  return _createClass(VotingList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var add, election, summary, http, url, params, email, id, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              // Set cookies with sample data\n              Cookies.set('address', SAMPLE_ELECTION.address);\n              _context.p = 1;\n              // Try to get real data first\n              add = Cookies.get('address');\n              election = Election(add);\n              _context.n = 2;\n              return election.methods.getElectionDetails().call();\n            case 2:\n              summary = _context.v;\n              this.setState({\n                election_name: summary[0],\n                election_description: summary[1],\n                useSampleData: false\n              });\n\n              // Try to get real voter data\n              http = new XMLHttpRequest();\n              url = '/voter/';\n              params = 'election_address=' + this.state.election_address;\n              http.open(\"POST\", url, true);\n              email = [];\n              id = [];\n              http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n              http.onreadystatechange = function () {\n                if (http.readyState == 4 && http.status == 200) {\n                  var responseObj = JSON.parse(http.responseText);\n                  if (responseObj.status == \"success\") {\n                    var _iterator = _createForOfIteratorHelper(responseObj.data.voters),\n                      _step;\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var voter = _step.value;\n                        email.push(voter.email);\n                        console.log(\"voter\", voter);\n                        id.push(voter.id);\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                    this.setState({\n                      emailArr: email,\n                      idArr: id\n                    });\n                    this.createVoterItems(email, id);\n                  }\n                }\n              }.bind(this);\n              http.send(params);\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.log(\"Using sample data due to error:\", _t.message);\n              // Use sample data if real data is not available\n              this.setSampleVoterData();\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, this, [[1, 3]]);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }() // Validate email to prevent duplicates\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Helmet, null, /*#__PURE__*/React.createElement(\"title\", null, \"Voting list\"), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"shortcut icon\",\n        type: \"image/x-icon\",\n        href: \"../../static/logo-Block.png\"\n      })), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Grid.Row, null, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 2\n      }, this.SidebarExampleVisible()), /*#__PURE__*/React.createElement(Layout, null, this.getElectionDetails(), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 14,\n        style: {\n          minHeight: '630px'\n        }\n      }, this.state.useSampleData && /*#__PURE__*/React.createElement(Message, {\n        info: true\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"info circle\"\n      }), \"This is a demonstration using sample voter data. You can add, edit, and remove voters.\"), /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          float: 'left',\n          width: '60%'\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Voter List\"), /*#__PURE__*/React.createElement(Container, null, this.renderTable())), /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          float: 'right',\n          width: '30%'\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        style: {}\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\"\n      }, \"Register Voter\"), /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: '100%'\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Form.Group, {\n        size: \"large\",\n        style: {\n          marginLeft: '15%',\n          marginRight: '15%'\n        }\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        style: {\n          marginTop: '10px'\n        },\n        fluid: true,\n        id: \"register_voter_email\",\n        label: \"Email:\",\n        placeholder: \"Enter voter email\",\n        textAlign: \"center\"\n      }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        style: {\n          Bottom: '10px',\n          marginBottom: '15px'\n        },\n        onClick: this.register\n      }, \"Register Voter\"))))))))));\n    }\n  }]);\n}(Component);\nexport default VotingList;","map":{"version":3,"names":["e","t","r","_Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","_Object$create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","_Object$getPrototypeOf","_Object$setPrototypeOf","__proto__","displayName","_regenerator","w","m","_Object$defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","_createForOfIteratorHelper","_Symbol$iterator","_Array$isArray","_unsupportedIterableToArray","_n","F","s","next","_arrayLikeToArray","toString","slice","constructor","name","_Array$from","test","Array","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","_Reflect$construct","apply","Boolean","valueOf","React","Component","Grid","Header","Button","Form","Input","Icon","Menu","Modal","Sidebar","Container","Card","Message","Layout","Cookies","Link","Router","Election","Helmet","SAMPLE_ELECTION","address","description","adminEmail","voters","candidates","totalVotes","candidateData","email","position","votes","bio","imageHash","voterData","id","hasVoted","electionStatus","startDate","endDate","VotingList","_Component","_this","_classCallCheck","_len","arguments","args","_key","concat","_defineProperty","election_address","get","election_name","election_description","emailArr","idArr","item","useSampleData","nextVoterId","emailError","map","voter","setState","createVoterItems","items","header","createElement","size","trigger","basic","color","closeIcon","onOpen","handleModalOpen","Content","placeholder","defaultValue","style","marginBottom","marginTop","onChange","validateEmail","state","negative","Actions","positive","icon","labelPosition","content","padding","onClick","updateEmail","disabled","deleteEmail","marginLeft","voterId","newEmail","document","getElementById","currentEmails","filter","index","_parseInt","includes","currentEmail","setTimeout","inputField","event","currentTarget","updatedEmailArr","_toConsumableArray","voterIndex","indexOf","alert","st","b","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","responseObj","JSON","parse","responseText","message","send","updatedIdArr","splice","newVoterId","info","Group","textAlign","Pushable","as","animation","inverted","vertical","visible","width","backgroundColor","borderWidth","Item","route","fontColor","signOut","remove","pushRoute","_this$state","Subheader","_inherits","_createClass","key","_componentDidMount","_asyncToGenerator","_callee","add","election","summary","_t","_context","set","methods","getElectionDetails","_iterator","data","_step","push","console","log","err","setSampleVoterData","componentDidMount","render","rel","type","href","Row","Column","SidebarExampleVisible","minHeight","float","renderTable","marginRight","fluid","label","primary","Bottom","register"],"sources":["C:/Users/Sathyajothi/Desktop/BlockChainVoting/pages/election/voting_list.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Header, Button, Form, Input, Icon, Menu, Modal, Sidebar, Container, Card, Message } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Cookies from 'js-cookie';\r\nimport { Link, Router } from '../../routes';\r\nimport Election from '../../Ethereum/election';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// Hardcoded sample election data\r\nconst SAMPLE_ELECTION = {\r\n  address: '0xa579675518D32c99B6f1929AFe8397d42D896f84',\r\n  name: 'Annual Board Election',\r\n  description: 'Election for Board of Directors 2023',\r\n  adminEmail: 'company@example.com',\r\n  voters: 150,\r\n  candidates: 5,\r\n  totalVotes: 120,\r\n  candidateData: [\r\n    {\r\n      email: 'john.doe@company.com',\r\n      name: 'John Doe',\r\n      position: 'CEO',\r\n      votes: 45,\r\n      bio: 'Experienced leader with 10+ years in industry',\r\n      imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\r\n    },\r\n    {\r\n      email: 'jane.smith@company.com',\r\n      name: 'Jane Smith',\r\n      position: 'CTO',\r\n      votes: 38,\r\n      bio: 'Technology innovator and strategic thinker',\r\n      imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\r\n    },\r\n    {\r\n      email: 'robert.johnson@company.com',\r\n      name: 'Robert Johnson',\r\n      position: 'CFO',\r\n      votes: 22,\r\n      bio: 'Financial expert with proven track record',\r\n      imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\r\n    },\r\n    {\r\n      email: 'sarah.williams@company.com',\r\n      name: 'Sarah Williams',\r\n      position: 'COO',\r\n      votes: 10,\r\n      bio: 'Operations specialist focused on efficiency',\r\n      imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\r\n    },\r\n    {\r\n      email: 'michael.brown@company.com',\r\n      name: 'Michael Brown',\r\n      position: 'CMO',\r\n      votes: 5,\r\n      bio: 'Marketing guru with creative vision',\r\n      imageHash: 'QmWvP2y5IqW7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z7W7Z'\r\n    }\r\n  ],\r\n  voterData: [\r\n    { id: 1, email: 'voter1@company.com', hasVoted: true },\r\n    { id: 2, email: 'voter2@company.com', hasVoted: true },\r\n    { id: 3, email: 'voter3@company.com', hasVoted: false },\r\n    { id: 4, email: 'voter4@company.com', hasVoted: true },\r\n    { id: 5, email: 'voter5@company.com', hasVoted: false },\r\n  ],\r\n  electionStatus: 'active',\r\n  startDate: '2023-10-01',\r\n  endDate: '2023-10-15'\r\n};\r\n\r\nclass VotingList extends Component {\r\n  state = {\r\n    election_address: Cookies.get('address') || SAMPLE_ELECTION.address,\r\n    election_name: SAMPLE_ELECTION.name,\r\n    election_description: SAMPLE_ELECTION.description,\r\n    emailArr: [],\r\n    idArr: [],\r\n    item: [],\r\n    useSampleData: true,\r\n    nextVoterId: 6, // Starting ID for new voters\r\n    emailError: '' // For duplicate email validation\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Set cookies with sample data\r\n    Cookies.set('address', SAMPLE_ELECTION.address);\r\n\r\n    try {\r\n      // Try to get real data first\r\n      const add = Cookies.get('address');\r\n      const election = Election(add);\r\n      const summary = await election.methods.getElectionDetails().call();\r\n      this.setState({\r\n        election_name: summary[0],\r\n        election_description: summary[1],\r\n        useSampleData: false\r\n      });\r\n\r\n      // Try to get real voter data\r\n      var http = new XMLHttpRequest();\r\n      var url = '/voter/';\r\n      var params = 'election_address=' + this.state.election_address;\r\n      http.open(\"POST\", url, true);\r\n      let email = [];\r\n      let id = []\r\n\r\n      http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n      http.onreadystatechange = function () {\r\n        if (http.readyState == 4 && http.status == 200) {\r\n          var responseObj = JSON.parse(http.responseText);\r\n          if (responseObj.status == \"success\") {\r\n            for (let voter of responseObj.data.voters) {\r\n              email.push(voter.email);\r\n              console.log(\"voter\", voter);\r\n              id.push(voter.id);\r\n            }\r\n            this.setState({\r\n              emailArr: email,\r\n              idArr: id\r\n            });\r\n            this.createVoterItems(email, id);\r\n          }\r\n        }\r\n      }.bind(this);\r\n      http.send(params);\r\n\r\n    } catch (err) {\r\n      console.log(\"Using sample data due to error:\", err.message);\r\n      // Use sample data if real data is not available\r\n      this.setSampleVoterData();\r\n    }\r\n  }\r\n\r\n  setSampleVoterData = () => {\r\n    const email = SAMPLE_ELECTION.voterData.map(voter => voter.email);\r\n    const id = SAMPLE_ELECTION.voterData.map(voter => voter.id);\r\n\r\n    this.setState({\r\n      emailArr: email,\r\n      idArr: id,\r\n      useSampleData: true\r\n    });\r\n    this.createVoterItems(email, id);\r\n  }\r\n\r\n  createVoterItems = (emailArr, idArr) => {\r\n    let i = -1;\r\n    const items = idArr.map(id => {\r\n      i++;\r\n      return {\r\n        header: emailArr[i],\r\n        description: (\r\n          <div>\r\n            <br />\r\n            <Modal\r\n              size={\"tiny\"}\r\n              trigger={\r\n                <Button basic id={id} color=\"green\">\r\n                  Edit\r\n                </Button>\r\n              }\r\n              closeIcon\r\n              onOpen={() => this.handleModalOpen(id, emailArr[i])}\r\n            >\r\n              <Modal.Header>Edit E-mail ID</Modal.Header>\r\n              <center>\r\n                <Modal.Content>\r\n                  <Input\r\n                    id={`EmailVal${id}`}\r\n                    placeholder='E-mail ID'\r\n                    defaultValue={emailArr[i]}\r\n                    style={{ marginBottom: '5%', marginTop: '5%' }}\r\n                    onChange={() => this.validateEmail(id)}\r\n                  />\r\n                  {this.state.emailError && (\r\n                    <Message negative size='tiny' style={{ marginTop: '10px' }}>\r\n                      {this.state.emailError}\r\n                    </Message>\r\n                  )}\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                  <Button\r\n                    positive\r\n                    icon=\"checkmark\"\r\n                    labelPosition=\"right\"\r\n                    content=\"Yes\"\r\n                    padding=\"30\"\r\n                    style={{ marginBottom: \"10px\" }}\r\n                    onClick={this.updateEmail}\r\n                    id={id}\r\n                    disabled={!!this.state.emailError}\r\n                  />\r\n                  <Button negative>No</Button>\r\n                </Modal.Actions>\r\n              </center>\r\n            </Modal>\r\n            <Button\r\n              negative\r\n              basic\r\n              id={id}\r\n              value={id}\r\n              onClick={this.deleteEmail}\r\n              style={{ marginLeft: '10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        )\r\n      };\r\n    });\r\n    this.setState({ item: items });\r\n  }\r\n\r\n  // Validate email to prevent duplicates\r\n  validateEmail = (voterId) => {\r\n    const newEmail = document.getElementById(`EmailVal${voterId}`).value;\r\n    const currentEmails = this.state.emailArr.filter((email, index) =>\r\n      this.state.idArr[index] !== parseInt(voterId)\r\n    );\r\n\r\n    if (currentEmails.includes(newEmail)) {\r\n      this.setState({ emailError: 'This email is already registered to another voter.' });\r\n      return false;\r\n    }\r\n\r\n    if (!newEmail.includes('@')) {\r\n      this.setState({ emailError: 'Please enter a valid email address.' });\r\n      return false;\r\n    }\r\n\r\n    this.setState({ emailError: '' });\r\n    return true;\r\n  }\r\n\r\n  handleModalOpen = (voterId, currentEmail) => {\r\n    // Clear any previous error when modal opens\r\n    this.setState({ emailError: '' });\r\n\r\n    // Set the current email as the default value\r\n    setTimeout(() => {\r\n      const inputField = document.getElementById(`EmailVal${voterId}`);\r\n      if (inputField) {\r\n        inputField.value = currentEmail;\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  updateEmail = event => {\r\n    const voterId = event.currentTarget.id;\r\n\r\n    // Validate email before proceeding\r\n    if (!this.validateEmail(voterId)) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.useSampleData) {\r\n      const newEmail = document.getElementById(`EmailVal${voterId}`).value;\r\n\r\n      // Update the email in the state\r\n      const updatedEmailArr = [...this.state.emailArr];\r\n      const voterIndex = this.state.idArr.indexOf(parseInt(voterId));\r\n\r\n      if (voterIndex !== -1) {\r\n        updatedEmailArr[voterIndex] = newEmail;\r\n        this.setState({\r\n          emailArr: updatedEmailArr,\r\n          emailError: '' // Clear error after successful update\r\n        });\r\n        this.createVoterItems(updatedEmailArr, this.state.idArr);\r\n        alert(`Voter email updated to: ${newEmail}`);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const st = 'EmailVal' + event.currentTarget.id;\r\n    const a = document.getElementById(st).value;\r\n    const b = this.state.election_name;\r\n    const c = this.state.election_description;\r\n\r\n    var http = new XMLHttpRequest();\r\n    var url = '/voter/' + voterId;\r\n    var params = 'email=' + a + '&election_name=' + b + '&election_description=' + c;\r\n    http.open(\"PUT\", url, true);\r\n    http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n    http.onreadystatechange = function () {\r\n      if (http.readyState == 4 && http.status == 200) {\r\n        var responseObj = JSON.parse(http.responseText);\r\n        if (responseObj.status == \"success\") {\r\n          alert(responseObj.message);\r\n        }\r\n      }\r\n    };\r\n    http.send(params);\r\n  }\r\n\r\n  deleteEmail = event => {\r\n    if (this.state.useSampleData) {\r\n      const voterId = parseInt(event.currentTarget.value);\r\n\r\n      // Remove the voter from the state\r\n      const voterIndex = this.state.idArr.indexOf(voterId);\r\n\r\n      if (voterIndex !== -1) {\r\n        const updatedEmailArr = [...this.state.emailArr];\r\n        const updatedIdArr = [...this.state.idArr];\r\n\r\n        updatedEmailArr.splice(voterIndex, 1);\r\n        updatedIdArr.splice(voterIndex, 1);\r\n\r\n        this.setState({\r\n          emailArr: updatedEmailArr,\r\n          idArr: updatedIdArr\r\n        });\r\n        this.createVoterItems(updatedEmailArr, updatedIdArr);\r\n        alert(`Voter with ID ${voterId} has been removed`);\r\n      }\r\n      return;\r\n    }\r\n\r\n    var http = new XMLHttpRequest();\r\n    var url = '/voter/' + event.currentTarget.value;\r\n    http.open(\"DELETE\", url, true);\r\n    http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n    http.onreadystatechange = function () {\r\n      if (http.readyState == 4 && http.status == 200) {\r\n        var responseObj = JSON.parse(http.responseText);\r\n        if (responseObj.status == \"success\") {\r\n          alert(responseObj.message);\r\n        }\r\n      }\r\n    };\r\n    http.send();\r\n  }\r\n\r\n  register = event => {\r\n    const email = document.getElementById('register_voter_email').value;\r\n\r\n    if (!email || !email.includes('@')) {\r\n      alert(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n\r\n    // Check for duplicate email\r\n    if (this.state.emailArr.includes(email)) {\r\n      alert(\"This email is already registered to another voter.\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.useSampleData) {\r\n      // Add new voter to sample data\r\n      const newVoterId = this.state.nextVoterId;\r\n      const updatedEmailArr = [...this.state.emailArr, email];\r\n      const updatedIdArr = [...this.state.idArr, newVoterId];\r\n\r\n      this.setState({\r\n        emailArr: updatedEmailArr,\r\n        idArr: updatedIdArr,\r\n        nextVoterId: newVoterId + 1\r\n      });\r\n\r\n      this.createVoterItems(updatedEmailArr, updatedIdArr);\r\n      alert(`Voter ${email} has been added with ID ${newVoterId}`);\r\n\r\n      // Clear the input field\r\n      document.getElementById('register_voter_email').value = '';\r\n      return;\r\n    }\r\n\r\n    var http = new XMLHttpRequest();\r\n    var url = \"/voter/register\";\r\n    var params = \"email=\" + email + \"&election_address=\" + this.state.election_address + \"&election_name=\" + this.state.election_name + \"&election_description=\" + this.state.election_description;\r\n    http.open(\"POST\", url, true);\r\n    http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n    http.onreadystatechange = function () {\r\n      if (http.readyState == 4 && http.status == 200) {\r\n        var responseObj = JSON.parse(http.responseText);\r\n        if (responseObj.status == \"success\") {\r\n          alert(responseObj.message);\r\n        }\r\n        else {\r\n          alert(responseObj.message);\r\n        }\r\n      }\r\n    };\r\n    http.send(params);\r\n  }\r\n\r\n  renderTable = () => {\r\n    if (this.state.item.length === 0) {\r\n      return (\r\n        <Message info>\r\n          <Icon name=\"info circle\" />\r\n          No voters registered yet. Add voters using the form on the right.\r\n        </Message>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card.Group items={this.state.item} />\r\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <p>Total Voters: {this.state.emailArr.length}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  SidebarExampleVisible = () => (\r\n    <Sidebar.Pushable>\r\n      <Sidebar as={Menu} animation='overlay' icon='labeled' inverted vertical visible width='thin' style={{ backgroundColor: 'white', borderWidth: \"10px\" }}>\r\n        <Menu.Item as='a' style={{ color: 'grey' }} >\r\n          <h2>MENU</h2><hr />\r\n        </Menu.Item>\r\n        <Link route={`/election/${Cookies.get('address')}/company_dashboard`}>\r\n          <a>\r\n            <Menu.Item style={{ color: 'grey', fontColor: 'grey' }}>\r\n              <Icon name='dashboard' />\r\n              Dashboard\r\n            </Menu.Item>\r\n          </a>\r\n        </Link>\r\n        <Link route={`/election/${Cookies.get('address')}/candidate_list`}>\r\n          <a>\r\n            <Menu.Item as='a' style={{ color: 'grey' }}>\r\n              <Icon name='user outline' />\r\n              Candidate List\r\n            </Menu.Item>\r\n          </a>\r\n        </Link>\r\n        <Link route={`/election/${Cookies.get('address')}/voting_list`}>\r\n          <a>\r\n            <Menu.Item as='a' style={{ color: 'grey' }}>\r\n              <Icon name='list' />\r\n              Voter List\r\n            </Menu.Item>\r\n          </a>\r\n        </Link>\r\n        <hr />\r\n        <Button onClick={this.signOut} style={{ backgroundColor: 'white' }}>\r\n          <Menu.Item as='a' style={{ color: 'grey' }}>\r\n            <Icon name='sign out' />\r\n            Sign Out\r\n          </Menu.Item>\r\n        </Button>\r\n      </Sidebar>\r\n    </Sidebar.Pushable>\r\n  )\r\n\r\n  signOut = () => {\r\n    Cookies.remove('address');\r\n    Cookies.remove('company_email');\r\n    Cookies.remove('company_id');\r\n    alert(\"Logging out.\");\r\n    Router.pushRoute('/homepage');\r\n  }\r\n\r\n  getElectionDetails = () => {\r\n    const { election_name, election_description } = this.state;\r\n\r\n    return (\r\n      <div style={{ marginLeft: '45%', marginBottom: '2%', marginTop: '2%' }}>\r\n        <Header as=\"h2\">\r\n          <Icon name=\"address card\" />\r\n          <Header.Content>\r\n            {election_name}\r\n            <Header.Subheader>{election_description}</Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Voting list</title>\r\n          <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../../static/logo-Block.png\" />\r\n        </Helmet>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}>\r\n              {this.SidebarExampleVisible()}\r\n            </Grid.Column>\r\n            <Layout>\r\n              {this.getElectionDetails()}\r\n              <br />\r\n              <br />\r\n              <Grid.Column width={14} style={{ minHeight: '630px' }}>\r\n                {this.state.useSampleData && (\r\n                  <Message info>\r\n                    <Icon name=\"info circle\" />\r\n                    This is a demonstration using sample voter data. You can add, edit, and remove voters.\r\n                  </Message>\r\n                )}\r\n                <Grid.Column style={{ float: 'left', width: '60%' }}>\r\n                  <Header as='h2' color='black'>\r\n                    Voter List\r\n                  </Header>\r\n                  <Container>\r\n                    {this.renderTable()}\r\n                  </Container>\r\n                </Grid.Column>\r\n                <Grid.Column style={{ float: 'right', width: '30%' }}>\r\n                  <Container style={{}}>\r\n                    <Header as='h2' color='black'>\r\n                      Register Voter\r\n                    </Header>\r\n                    <Card style={{ width: '100%' }}>\r\n                      <br />\r\n                      <Form.Group size='large' style={{ marginLeft: '15%', marginRight: '15%' }} >\r\n                        <Form.Input\r\n                          style={{ marginTop: '10px' }}\r\n                          fluid\r\n                          id='register_voter_email'\r\n                          label='Email:'\r\n                          placeholder='Enter voter email'\r\n                          textAlign='center'\r\n                        />\r\n\r\n                        <br /><br />\r\n                        <Button\r\n                          primary\r\n                          style={{ Bottom: '10px', marginBottom: '15px' }}\r\n                          onClick={this.register}\r\n                        >\r\n                          Register Voter\r\n                        </Button>\r\n                      </Form.Group>\r\n                    </Card>\r\n                  </Container>\r\n                </Grid.Column>\r\n              </Grid.Column>\r\n            </Layout>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VotingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}