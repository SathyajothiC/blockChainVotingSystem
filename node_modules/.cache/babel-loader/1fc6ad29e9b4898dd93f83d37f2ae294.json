{"ast":null,"code":"import web3 from './web3';\nimport ElectionFactory from './Build/ElectionFact.json';\n\n// Simple ABI extraction\nvar contractABI = ElectionFactory.abi;\nvar contractAddress = '0x16795911522115Ef7D4F099f1aBe1F76C2dB6AC8';\n\n// Verify deployment first\nvar code = await web3.eth.getCode(contractAddress);\nconsole.log('Contract code exists:', code !== '0x');\nif (code === '0x') {\n  throw new Error(\"Contract not deployed at this address\");\n}\nvar instance = new web3.eth.Contract(contractABI, contractAddress);\nexport default instance;","map":{"version":3,"names":["web3","ElectionFactory","contractABI","abi","contractAddress","code","eth","getCode","console","log","Error","instance","Contract"],"sources":["C:/Users/Sathyajothi/Desktop/BlockChainVoting/Ethereum/election_factory.js"],"sourcesContent":["import web3 from './web3';\r\nimport ElectionFactory from './Build/ElectionFact.json';\r\n\r\n// Simple ABI extraction\r\nconst contractABI = ElectionFactory.abi;\r\nconst contractAddress = '0x16795911522115Ef7D4F099f1aBe1F76C2dB6AC8';\r\n\r\n// Verify deployment first\r\nconst code = await web3.eth.getCode(contractAddress);\r\nconsole.log('Contract code exists:', code !== '0x');\r\n\r\nif (code === '0x') {\r\n    throw new Error(\"Contract not deployed at this address\");\r\n}\r\n\r\nconst instance = new web3.eth.Contract(contractABI, contractAddress);\r\nexport default instance;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,eAAe,MAAM,2BAA2B;;AAEvD;AACA,IAAMC,WAAW,GAAGD,eAAe,CAACE,GAAG;AACvC,IAAMC,eAAe,GAAG,4CAA4C;;AAEpE;AACA,IAAMC,IAAI,GAAG,MAAML,IAAI,CAACM,GAAG,CAACC,OAAO,CAACH,eAAe,CAAC;AACpDI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,IAAI,KAAK,IAAI,CAAC;AAEnD,IAAIA,IAAI,KAAK,IAAI,EAAE;EACf,MAAM,IAAIK,KAAK,CAAC,uCAAuC,CAAC;AAC5D;AAEA,IAAMC,QAAQ,GAAG,IAAIX,IAAI,CAACM,GAAG,CAACM,QAAQ,CAACV,WAAW,EAAEE,eAAe,CAAC;AACpE,eAAeO,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}